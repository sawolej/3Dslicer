{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","dane.js","main.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","_cache","warnOnce","message","SRGBToLinear","LinearToSRGB","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","DisplayP3ToLinearSRGB","color","convertSRGBToLinear","LinearSRGBToDisplayP3","convertLinearToSRGB","TO_LINEAR","_TO_LINEAR","_defineProperty","FROM_LINEAR","_FROM_LINEAR","ColorManagement","enabled","legacyMode","workingColorSpace","colorSpace","convert","sourceColorSpace","targetColorSpace","sourceToLinear","targetFromLinear","concat","fromWorkingColorSpace","toWorkingColorSpace","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","WebGLRenderTarget","_EventDispatcher2","_super2","options","_this3","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","setSize","assign","DataArrayTexture","_Texture","_super3","_this4","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super4","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super5","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super6","_this7","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super7","count","_this8","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$b","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$a","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","geometry","attributes","position","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$9","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super8","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","remove","removeFromParent","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","childResult","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","_EventDispatcher4","_super9","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","toString","setValues","newValue","currentValue","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","_color","getHexString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","MeshBasicMaterial","_Material","_super10","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$8","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRange","gpuType","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","setXY","setXYZ","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super11","Uint8BufferAttribute","_BufferAttribute2","_super12","Uint8ClampedBufferAttribute","_BufferAttribute3","_super13","Int16BufferAttribute","_BufferAttribute4","_super14","Uint16BufferAttribute","_BufferAttribute5","_super15","Int32BufferAttribute","_BufferAttribute6","_super16","Uint32BufferAttribute","_BufferAttribute7","_super17","Float16BufferAttribute","_BufferAttribute8","_super18","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super19","Float64BufferAttribute","_BufferAttribute10","_super20","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$7","BufferGeometry","_EventDispatcher5","_super21","_this13","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$5","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super22","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","getVertexPosition","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super23","widthSegments","heightSegments","depthSegments","_this15","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super24","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super25","_this17","PerspectiveCamera","_Camera","_super26","fov","aspect","_this18","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super27","renderTarget","_this19","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super28","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super29","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$4","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super30","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super31","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","useLegacyLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","supportsVertexTextures","isXRRenderTarget","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super32","_this24","isMeshDepthMaterial","_Material4","_super33","_this25","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RED_INTEGER","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super34","_this26","isArrayCamera","Group","_Object3D4","_super35","_this27","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","_Texture4","_super36","_this28","WebXRManager","_EventDispatcher6","_super37","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","createCanvasElement","display","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","self","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","_WebGLRenderer","_super38","FogExp2","Fog","Scene","_Object3D5","_super39","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$5","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super40","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super41","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super42","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$3","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super43","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super44","_this35","isBone","DataTexture","_Texture5","_super45","_this36","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super46","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh","_sphere$2","InstancedMesh","_Mesh2","_super47","_this38","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","_Material6","_super48","_this39","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super49","_this40","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super50","_this41","LineLoop","_Line2","_super51","_this42","_Material7","_super52","_this43","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super53","_this44","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super54","video","_this45","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super55","_this46","CompressedTexture","_Texture8","_super56","_this47","CompressedArrayTexture","_CompressedTexture","_super57","_this48","CanvasTexture","_Texture9","_super58","_this49","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","tz","EllipseCurve","_Curve","_super59","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this50","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super60","aRadius","_this51","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super61","curveType","_this52","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super62","_this53","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super63","_this54","isCubicBezierCurve3","LineCurve","_Curve5","_super64","_this55","isLineCurve","LineCurve3","_Curve6","_super65","_this56","isLineCurve3","QuadraticBezierCurve","_Curve7","_super66","_this57","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super67","_this58","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super68","_this59","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super69","_this60","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super70","_this61","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super71","phiStart","phiLength","_this62","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super72","capSegments","radialSegments","_this63","CircleGeometry","_BufferGeometry4","_super73","thetaStart","thetaLength","_this64","segment","CylinderGeometry","_BufferGeometry5","_super74","radiusTop","radiusBottom","openEnded","_this65","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super75","_this66","PolyhedronGeometry","_BufferGeometry6","_super76","_this67","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super77","_this68","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super78","thresholdAngle","_this69","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super79","_this70","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super80","_this71","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super81","_this72","OctahedronGeometry","_PolyhedronGeometry3","_super82","_this73","RingGeometry","_BufferGeometry9","_super83","innerRadius","outerRadius","thetaSegments","phiSegments","_this74","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super84","_this75","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super85","_this76","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super86","_this77","TorusGeometry","_BufferGeometry12","_super87","tube","tubularSegments","_this78","TorusKnotGeometry","_BufferGeometry13","_super88","_this79","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super89","_this80","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super90","_this81","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super91","_this82","RawShaderMaterial","_ShaderMaterial","_super92","_this83","_Material9","_super93","_this84","_MeshStandardMaterial","_super94","_this85","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_toConsumableArray","_Material10","_super95","_this86","_Material11","_super96","_this87","_Material12","_super97","_this88","_Material13","_super98","_this89","_Material14","_super99","_this90","_LineBasicMaterial","_super100","_this91","arraySlice","isTypedArray","convertArray","forceClone","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super101","_this92","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super102","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super103","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super104","ColorKeyframeTrack","_KeyframeTrack2","_super105","NumberKeyframeTrack","_KeyframeTrack3","_super106","QuaternionLinearInterpolant","_Interpolant4","_super107","QuaternionKeyframeTrack","_KeyframeTrack4","_super108","StringKeyframeTrack","_KeyframeTrack5","_super109","VectorKeyframeTrack","_KeyframeTrack6","_super110","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super111","response","_this93","_wrapNativeSuper","FileLoader","_Loader","_super112","_this94","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super113","CompressedTextureLoader","_Loader3","_super114","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super115","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super116","urls","DataTextureLoader","_Loader6","_super117","texData","TextureLoader","_Loader7","_super118","Light","_Object3D11","_super119","_this95","HemisphereLight","_Light","_super120","_this96","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super121","_this97","isSpotLightShadow","SpotLight","_Light2","_super122","_this98","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super123","_this99","_cubeDirections","_cubeUps","PointLight","_Light3","_super124","_this100","DirectionalLightShadow","_LightShadow3","_super125","_this101","isDirectionalLightShadow","DirectionalLight","_Light4","_super126","_this102","AmbientLight","_Light5","_super127","_this103","RectAreaLight","_Light6","_super128","_this104","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super129","_this105","MaterialLoader","_Loader8","_super130","_this106","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super131","_this107","BufferGeometryLoader","_Loader9","_super132","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super133","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super134","_this108","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super135","bufferCopy","decodeAudioData","audioBuffer","handleError","HemisphereLightProbe","_LightProbe","_super136","_this109","isHemisphereLightProbe","sky","ground","AmbientLightProbe","_LightProbe2","_super137","_this110","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super138","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super139","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super140","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super141","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","UniformsGroup","_EventDispatcher8","_super142","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super143","_this116","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super144","_this117","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super145","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh3","_super146","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super147","_this120","GridHelper","_LineSegments2","_super148","_this121","PolarGridHelper","_LineSegments3","_super149","sectors","rings","_this122","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super150","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super151","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super152","_this125","Box3Helper","_LineSegments6","_super153","_this126","PlaneHelper","_Line3","_super154","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super155","headLength","headWidth","_this128","setDirection","setColor","AxesHelper","_LineSegments7","_super156","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","Boolean","valueOf","_changeEvent","_startEvent","_endEvent","OrbitControls","touchAction","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","THREE","_interopRequireWildcard","_OrbitControls","_dane","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","controls","layerSpacing","getMaxVal","clearScene","getElementById","addDataToScene","maxValue","thresh","bigBois","spacing","sphereGeometry","sphereMaterial","instances","instancedSphere","instanceCounter","currentLayer","innerWidth","innerHeight","appendChild","animate","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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AK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EAClmjlhlvlplvlrlhlplkB,CAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACnltlplkkjljlnlnlB,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACjlllB,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACvltltlnlnlzlhlllkhlrlkvlxlnlnlrljlllB,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACtlkB,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACtlvljlrlB,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,IAAI,EAAC,GAAG,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC,EACplpltlllrlzlhllpllltlhlhlzlB,CAAC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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '154';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t// Display P3 uses the sRGB transfer functions\n\treturn color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$b.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$b );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$b.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$a.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$a.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( object.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( precise && geometry.attributes !== undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_vector$a.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\t\tthis.expandByPoint( _vector$a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\t\tthis.union( _box$3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$a );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$a.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$a ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$a ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$9 ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$9.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$9.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$9.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$9.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$9.dot( this.direction );\n\t\tconst d2 = _vector$9.dot( _vector$9 ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$9 ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = this.alphaHash;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$8 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( this, i );\n\t\t\t\t_vector$8.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( this, i );\n\n\t\t\t_vector$8.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t\t_vector$7.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$7 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$7.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$7.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$7.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$7 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$7.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$5.copy( geometry.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$5.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$5, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$4.center.set( 0, 0, 0 );\n\t\t_sphere$4.radius = 0.7071067811865476;\n\t\t_sphere$4.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$4 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tanisotropyV /= material.anisotropy;\\n\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, vMapUv );\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst xr = renderer.xr;\n\t\tconst environmentBlendMode = xr.getEnvironmentBlendMode();\n\n\t\tswitch ( environmentBlendMode ) {\n\n\t\t\tcase 'opaque':\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'additive':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t\tcase 'alpha-blend':\n\t\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\t\t\t\tforceClear = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.colorSpace === SRGBColorSpace ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase SRGBColorSpace:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t} else {\n\n\t\t\t\t// default error reporting\n\n\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error(\n\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\tfragmentErrors\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( colorSpace === SRGBColorSpace && forceLinearTransfer === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis.useLegacyLights = true;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tfunction prepare( material, scene, object ) {\n\n\t\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentRenderState = renderStates.get( scene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$5.fromBufferAttribute( this, i );\n\n\t\t\t_vector$5.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$5.x, _vector$5.y, _vector$5.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\t_vertex.fromBufferAttribute( positionAttribute, i );\n\t\t\tthis.applyBoneTransform( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$2.copy( this.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t}, handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","export var d1 = [[0.83,0.881,0.867,0.858,0.855,0.881,0.872,0.877,0.876,0.89,0.869,0.875,0.888,0.899,0.873,0.886,0.879,0.882,0.907,0.915,0.916,0.912,0.866,0.912,0.922,0.897,0.907,0.909,0.916,0.898,0.882,0.937,0.91,0.917,0.902,0.911,0.93,0.901,0.897,0.928,0.924,0.88,0.927,0.902,0.948,0.902,0.919,0.936,0.919,0.926,0.941,0.917,0.912,0.926,0.905,0.925,0.9,0.904,0.902,0.933,0.926,0.94,0.91,0.945,0.939,0.931,0.954,0.936,0.956,0.963,0.925,0.954,0.944,0.96,0.921,0.95,0.967,0.952,0.96,0.981,0.948,0.964,0.934,0.958,0.951,0.952,0.97,0.957,0.944,0.962,0.929,0.959,0.94,0.939,0.939,0.963,0.967,0.951,0.932,0.959,0.957],\r\n[0.837,0.85,0.844,0.884,0.869,0.869,0.88,0.859,0.87,0.881,0.877,0.886,0.889,0.884,0.896,0.875,0.899,0.9,0.91,0.894,0.904,0.899,0.896,0.929,0.906,0.913,0.894,0.923,0.919,0.921,0.917,0.917,0.911,0.935,0.894,0.918,0.9,0.922,0.906,0.915,0.91,0.92,0.939,0.902,0.932,0.935,0.909,0.915,0.928,0.913,0.913,0.925,0.885,0.942,0.922,0.907,0.951,0.948,0.928,0.908,0.951,0.948,0.92,0.943,0.906,0.944,0.937,0.936,0.949,0.94,0.954,0.946,0.939,0.925,0.934,0.962,0.962,0.973,0.969,0.955,0.964,0.948,0.961,0.959,0.938,0.957,0.967,0.952,0.955,0.949,0.982,0.948,0.94,0.964,0.968,0.97,0.943,0.934,0.962,0.943,0.951],\r\n[0.815,0.857,0.868,0.85,0.885,0.899,0.849,0.841,0.881,0.893,0.841,0.91,0.86,0.882,0.893,0.889,0.883,0.899,0.898,0.915,0.892,0.913,0.883,0.916,0.892,0.918,0.914,0.921,0.922,0.892,0.919,0.9,0.923,0.904,0.9,0.938,0.916,0.892,0.925,0.922,0.916,0.928,0.925,0.896,0.912,0.943,0.892,0.917,0.935,0.903,0.925,0.912,0.897,0.925,0.924,0.926,0.909,0.932,0.905,0.92,0.942,0.947,0.938,0.928,0.937,0.95,0.945,0.941,0.924,0.937,0.938,0.958,0.941,0.948,0.963,0.962,0.939,0.955,0.952,0.974,0.96,0.958,0.95,0.956,0.945,0.942,0.958,0.932,0.962,0.962,0.98,0.944,0.946,0.961,0.96,0.966,0.947,0.94,0.948,0.959,0.96],\r\n[0.838,0.85,0.866,0.866,0.858,0.907,0.882,0.856,0.857,0.899,0.876,0.892,0.871,0.877,0.884,0.897,0.917,0.91,0.893,0.894,0.878,0.898,0.907,0.916,0.903,0.927,0.906,0.919,0.927,0.922,0.928,0.92,0.933,0.903,0.901,0.913,0.928,0.902,0.922,0.936,0.902,0.918,0.912,0.916,0.936,0.911,0.899,0.915,0.925,0.905,0.923,0.919,0.936,0.938,0.923,0.909,0.932,0.923,0.901,0.941,0.945,0.935,0.914,0.917,0.923,0.958,0.957,0.973,0.953,0.944,0.943,0.935,0.95,0.943,0.94,0.954,0.964,0.95,0.976,0.957,0.957,0.954,0.958,0.928,0.947,0.944,0.963,0.94,0.978,0.971,0.937,0.956,0.947,0.937,0.967,0.966,0.971,0.942,0.939,0.97,0.937],\r\n[0.825,0.838,0.856,0.85,0.859,0.873,0.889,0.871,0.888,0.865,0.889,0.898,0.881,0.867,0.895,0.913,0.89,0.912,0.895,0.9,0.919,0.901,0.916,0.898,0.885,0.923,0.904,0.918,0.892,0.914,0.921,0.904,0.909,0.94,0.932,0.888,0.934,0.905,0.914,0.92,0.928,0.905,0.913,0.899,0.911,0.912,0.889,0.914,0.904,0.895,0.91,0.921,0.913,0.938,0.935,0.911,0.9,0.923,0.945,0.966,0.949,0.946,0.961,0.928,0.95,0.934,0.958,0.975,0.941,0.964,0.975,0.959,0.967,0.955,0.944,0.982,0.973,0.954,0.956,0.978,0.967,0.941,0.975,0.964,0.943,0.936,0.952,0.964,0.944,0.946,0.933,0.951,0.953,0.964,0.974,0.957,0.958,0.952,0.95,0.955,0.924],\r\n[0.825,0.848,0.847,0.868,0.824,0.874,0.865,0.881,0.89,0.872,0.856,0.888,0.873,0.864,0.89,0.891,0.901,0.919,0.883,0.903,0.914,0.911,0.894,0.912,0.888,0.912,0.938,0.891,0.9,0.906,0.904,0.919,0.903,0.919,0.912,0.917,0.885,0.886,0.932,0.916,0.905,0.911,0.922,0.914,0.924,0.929,0.933,0.921,0.922,0.906,0.906,0.898,0.918,0.899,0.912,0.916,0.904,0.955,0.952,0.932,0.937,0.955,0.938,0.916,0.937,0.937,0.941,0.961,0.97,0.928,0.95,0.932,0.954,0.956,0.967,0.958,0.95,0.943,0.945,0.967,0.944,0.965,0.94,0.979,0.975,0.944,0.984,0.952,0.955,0.948,0.959,0.962,0.971,0.957,0.934,0.964,0.977,0.966,0.949,0.945,0.947],\r\n[0.872,0.85,0.849,0.87,0.861,0.87,0.863,0.897,0.889,0.892,0.88,0.905,0.896,0.879,0.864,0.906,0.894,0.887,0.904,0.921,0.898,0.937,0.895,0.913,0.918,0.944,0.915,0.917,0.904,0.911,0.897,0.906,0.925,0.898,0.9,0.905,0.919,0.924,0.907,0.935,0.91,0.906,0.922,0.912,0.913,0.912,0.907,0.919,0.924,0.906,0.903,0.883,0.887,0.887,0.884,0.907,0.907,0.934,0.915,0.928,0.953,0.939,0.925,0.926,0.948,0.932,0.913,0.944,0.938,0.982,0.931,0.952,0.954,0.964,0.956,0.969,0.939,0.952,0.953,0.966,0.958,0.969,0.953,0.975,0.948,0.956,0.98,0.95,0.948,0.955,0.973,0.953,0.977,0.948,0.968,0.95,0.967,0.925,0.951,0.936,0.951],\r\n[0.866,0.888,0.854,0.908,0.847,0.883,0.892,0.91,0.895,0.871,0.881,0.868,0.895,0.863,0.894,0.908,0.911,0.905,0.9,0.927,0.905,0.934,0.919,0.922,0.882,0.908,0.885,0.91,0.941,0.906,0.891,0.907,0.903,0.917,0.931,0.922,0.91,0.908,0.922,0.906,0.908,0.885,0.9,0.889,0.921,0.914,0.877,0.928,0.886,0.874,0.88,0.821,0.837,0.815,0.834,0.871,0.906,0.887,0.9,0.9,0.886,0.913,0.971,0.945,0.944,0.945,0.941,0.946,0.92,0.944,0.953,0.942,0.944,0.961,0.942,0.974,0.973,0.943,0.941,0.969,0.952,0.96,0.929,0.961,0.951,0.948,0.961,0.967,0.945,0.973,0.957,0.964,0.972,0.99,0.944,0.952,0.963,0.968,0.955,0.951,0.946],\r\n[0.795,0.83,0.827,0.859,0.878,0.885,0.892,0.892,0.866,0.906,0.895,0.882,0.898,0.878,0.908,0.916,0.892,0.905,0.892,0.914,0.907,0.875,0.903,0.912,0.906,0.948,0.904,0.896,0.881,0.92,0.88,0.892,0.927,0.934,0.932,0.876,0.915,0.885,0.882,0.907,0.902,0.894,0.897,0.829,0.82,0.791,0.797,0.778,0.792,0.713,0.748,0.69,0.66,0.694,0.67,0.687,0.791,0.822,0.828,0.868,0.881,0.878,0.897,0.922,0.902,0.95,0.927,0.931,0.939,0.982,0.954,0.961,0.945,0.971,0.948,0.948,0.96,0.968,0.962,0.969,0.958,0.952,0.955,0.975,0.96,0.933,0.959,0.977,0.962,0.963,0.95,0.953,0.975,0.938,0.967,0.947,0.967,0.946,0.948,0.957,0.961],\r\n[0.84,0.847,0.864,0.869,0.865,0.882,0.89,0.894,0.89,0.87,0.903,0.895,0.879,0.881,0.89,0.881,0.91,0.903,0.91,0.893,0.913,0.851,0.892,0.92,0.906,0.93,0.917,0.922,0.872,0.895,0.901,0.934,0.927,0.926,0.905,0.89,0.91,0.903,0.845,0.866,0.817,0.783,0.721,0.708,0.686,0.598,0.588,0.567,0.525,0.492,0.449,0.43,0.362,0.314,0.41,0.389,0.472,0.57,0.58,0.631,0.731,0.724,0.792,0.811,0.857,0.855,0.907,0.93,0.936,0.942,0.948,0.943,0.96,0.974,0.952,0.963,0.94,0.961,0.971,0.967,0.969,0.938,0.945,0.965,0.955,0.972,0.955,0.945,0.94,0.931,0.96,0.986,0.958,0.967,0.973,0.963,0.958,0.953,0.97,0.952,0.961],\r\n[0.846,0.892,0.86,0.87,0.866,0.885,0.861,0.866,0.907,0.885,0.85,0.904,0.871,0.904,0.913,0.892,0.868,0.888,0.864,0.911,0.909,0.888,0.905,0.913,0.907,0.901,0.929,0.909,0.913,0.905,0.903,0.925,0.897,0.925,0.889,0.872,0.878,0.78,0.778,0.694,0.653,0.661,0.569,0.423,0.468,0.455,0.392,0.442,0.43,0.357,0.354,0.302,0.341,0.23,0.241,0.222,0.244,0.393,0.4,0.474,0.523,0.554,0.596,0.567,0.629,0.695,0.807,0.884,0.927,0.931,0.933,0.925,0.954,0.929,0.939,0.951,0.943,0.93,0.962,0.956,0.962,0.931,0.943,0.934,0.927,0.945,0.96,0.963,0.95,0.982,0.958,0.959,0.952,0.965,0.951,0.969,0.96,0.963,0.958,0.963,0.942],\r\n[0.862,0.848,0.851,0.828,0.854,0.892,0.869,0.893,0.869,0.901,0.895,0.89,0.884,0.866,0.896,0.894,0.891,0.899,0.891,0.903,0.906,0.919,0.911,0.92,0.898,0.913,0.899,0.915,0.91,0.904,0.909,0.931,0.906,0.892,0.859,0.84,0.781,0.649,0.571,0.556,0.458,0.416,0.358,0.301,0.347,0.369,0.33,0.358,0.371,0.347,0.362,0.306,0.238,0.169,0.134,0.163,0.204,0.288,0.281,0.346,0.435,0.396,0.44,0.411,0.419,0.519,0.597,0.684,0.795,0.875,0.903,0.91,0.937,0.943,0.959,0.962,0.936,0.961,0.948,0.95,0.956,0.943,0.966,0.942,0.939,0.956,0.962,0.99,0.945,0.958,0.971,0.938,0.951,0.959,0.934,0.953,0.955,0.954,0.962,0.978,0.946],\r\n[0.812,0.862,0.857,0.848,0.847,0.897,0.877,0.873,0.89,0.898,0.88,0.885,0.903,0.902,0.869,0.928,0.918,0.911,0.877,0.898,0.895,0.901,0.904,0.895,0.897,0.919,0.898,0.913,0.902,0.897,0.9,0.852,0.849,0.844,0.786,0.669,0.571,0.464,0.429,0.42,0.372,0.348,0.392,0.293,0.383,0.42,0.35,0.423,0.373,0.345,0.323,0.297,0.176,0.108,0.175,0.069,0.1,0.182,0.147,0.299,0.359,0.304,0.374,0.209,0.361,0.248,0.416,0.482,0.664,0.725,0.849,0.843,0.921,0.95,0.943,0.941,0.944,0.965,0.954,0.96,0.924,0.956,0.936,0.967,0.969,0.969,0.972,0.966,0.965,0.992,0.939,0.964,0.954,0.945,0.931,0.959,0.954,0.937,0.972,0.943,0.947],\r\n[0.839,0.861,0.88,0.868,0.886,0.892,0.859,0.888,0.875,0.87,0.848,0.869,0.879,0.9,0.907,0.892,0.918,0.891,0.911,0.896,0.907,0.922,0.93,0.876,0.908,0.892,0.898,0.88,0.89,0.865,0.877,0.796,0.788,0.679,0.587,0.45,0.412,0.343,0.376,0.399,0.373,0.387,0.42,0.42,0.512,0.554,0.524,0.558,0.593,0.484,0.404,0.355,0.246,0.158,0.143,0.165,0.111,0.133,0.152,0.266,0.225,0.3,0.305,0.22,0.325,0.175,0.271,0.317,0.44,0.454,0.62,0.693,0.838,0.87,0.902,0.941,0.947,0.938,0.935,0.975,0.943,0.954,0.925,0.961,0.96,0.985,0.948,0.957,0.974,0.931,0.961,0.952,0.966,0.974,0.955,0.953,0.956,0.973,0.948,0.972,0.97],\r\n[0.845,0.876,0.846,0.883,0.841,0.871,0.867,0.862,0.874,0.853,0.881,0.86,0.88,0.891,0.882,0.91,0.913,0.905,0.898,0.889,0.893,0.906,0.906,0.905,0.937,0.929,0.898,0.899,0.87,0.823,0.763,0.675,0.556,0.485,0.409,0.367,0.37,0.318,0.323,0.47,0.451,0.604,0.612,0.619,0.719,0.742,0.749,0.709,0.72,0.669,0.592,0.566,0.413,0.301,0.237,0.204,0.101,0.156,0.173,0.234,0.242,0.242,0.262,0.202,0.187,0.167,0.159,0.281,0.289,0.429,0.42,0.433,0.583,0.69,0.811,0.897,0.92,0.917,0.96,0.973,0.969,0.945,0.962,0.956,0.961,0.956,0.96,0.933,0.956,0.939,0.941,0.96,0.938,0.96,0.97,0.956,0.93,0.951,0.952,0.962,0.939],\r\n[0.791,0.838,0.881,0.875,0.83,0.853,0.866,0.888,0.872,0.896,0.865,0.92,0.9,0.892,0.88,0.886,0.87,0.894,0.918,0.918,0.911,0.899,0.92,0.908,0.893,0.934,0.899,0.845,0.744,0.674,0.538,0.484,0.419,0.34,0.276,0.256,0.314,0.318,0.393,0.586,0.645,0.67,0.768,0.763,0.812,0.832,0.817,0.851,0.791,0.768,0.718,0.712,0.619,0.46,0.311,0.279,0.215,0.208,0.202,0.297,0.274,0.26,0.238,0.235,0.267,0.148,0.204,0.185,0.244,0.314,0.188,0.316,0.446,0.444,0.544,0.719,0.838,0.912,0.916,0.945,0.964,0.962,0.942,0.976,0.958,0.949,0.968,0.973,0.99,0.947,0.96,0.943,0.911,0.942,0.938,0.957,0.953,0.94,0.949,0.967,0.945],\r\n[0.835,0.879,0.831,0.897,0.825,0.865,0.882,0.893,0.835,0.883,0.867,0.9,0.891,0.874,0.902,0.886,0.886,0.886,0.882,0.91,0.912,0.876,0.902,0.898,0.889,0.876,0.835,0.746,0.585,0.457,0.376,0.377,0.312,0.258,0.282,0.227,0.245,0.338,0.478,0.661,0.734,0.743,0.801,0.854,0.837,0.875,0.837,0.892,0.852,0.844,0.833,0.777,0.738,0.596,0.394,0.302,0.19,0.188,0.191,0.27,0.313,0.28,0.292,0.227,0.175,0.229,0.214,0.131,0.188,0.262,0.2,0.265,0.273,0.269,0.327,0.5,0.617,0.804,0.889,0.936,0.931,0.97,0.927,0.944,0.969,0.955,0.96,0.964,0.961,0.947,0.977,0.969,0.958,0.966,0.967,0.965,0.95,0.958,0.961,0.95,0.942],\r\n[0.837,0.847,0.865,0.855,0.863,0.887,0.914,0.876,0.864,0.89,0.893,0.909,0.895,0.9,0.873,0.889,0.871,0.873,0.871,0.889,0.925,0.906,0.924,0.917,0.878,0.837,0.716,0.537,0.463,0.302,0.338,0.289,0.248,0.256,0.178,0.209,0.243,0.402,0.636,0.729,0.81,0.845,0.862,0.872,0.917,0.883,0.848,0.855,0.885,0.857,0.87,0.846,0.781,0.721,0.559,0.378,0.309,0.173,0.238,0.233,0.274,0.317,0.285,0.27,0.243,0.219,0.3,0.21,0.222,0.219,0.158,0.17,0.124,0.176,0.194,0.306,0.471,0.565,0.802,0.887,0.961,0.951,0.963,0.949,0.956,0.955,0.97,0.985,0.961,0.956,0.968,0.968,0.955,0.97,0.955,0.969,0.982,0.949,0.949,0.936,0.929],\r\n[0.848,0.873,0.859,0.87,0.865,0.861,0.872,0.876,0.877,0.892,0.892,0.882,0.871,0.885,0.881,0.909,0.884,0.889,0.908,0.932,0.902,0.884,0.895,0.9,0.814,0.736,0.556,0.383,0.407,0.308,0.31,0.264,0.278,0.18,0.18,0.214,0.328,0.527,0.663,0.795,0.803,0.845,0.905,0.883,0.875,0.895,0.903,0.888,0.901,0.888,0.846,0.823,0.854,0.802,0.657,0.412,0.35,0.245,0.203,0.253,0.298,0.287,0.267,0.229,0.19,0.249,0.278,0.185,0.171,0.154,0.131,0.145,0.135,0.079,0.138,0.182,0.295,0.497,0.643,0.848,0.903,0.923,0.94,0.988,0.966,0.931,0.943,0.942,0.939,0.954,0.947,0.94,0.984,0.954,0.956,0.943,0.968,0.964,0.95,0.972,0.93],\r\n[0.849,0.856,0.849,0.875,0.874,0.88,0.887,0.88,0.853,0.89,0.849,0.878,0.889,0.909,0.877,0.894,0.908,0.898,0.917,0.936,0.907,0.881,0.885,0.84,0.72,0.574,0.424,0.319,0.293,0.291,0.255,0.298,0.227,0.16,0.122,0.154,0.238,0.471,0.691,0.801,0.87,0.864,0.892,0.887,0.887,0.928,0.905,0.907,0.901,0.897,0.89,0.846,0.861,0.785,0.735,0.495,0.313,0.219,0.261,0.314,0.321,0.288,0.321,0.294,0.228,0.248,0.292,0.177,0.141,0.151,0.132,0.077,0.1,0.095,0.063,0.139,0.222,0.27,0.484,0.599,0.836,0.89,0.941,0.976,0.973,0.925,0.952,0.965,0.955,0.941,0.947,0.964,0.975,0.96,0.929,0.94,0.956,0.964,0.938,0.961,0.931],\r\n[0.83,0.861,0.869,0.853,0.836,0.868,0.866,0.896,0.885,0.865,0.876,0.902,0.905,0.876,0.906,0.887,0.908,0.872,0.874,0.885,0.879,0.844,0.827,0.686,0.549,0.448,0.356,0.308,0.32,0.281,0.252,0.289,0.236,0.175,0.124,0.081,0.214,0.43,0.67,0.822,0.835,0.833,0.879,0.881,0.919,0.882,0.911,0.925,0.899,0.884,0.896,0.886,0.836,0.788,0.696,0.55,0.3,0.185,0.199,0.273,0.323,0.245,0.305,0.275,0.217,0.236,0.274,0.19,0.161,0.13,0.148,0.079,0.099,0.075,0.067,0.109,0.133,0.166,0.244,0.416,0.592,0.815,0.917,0.942,0.961,0.967,0.947,0.958,0.93,0.963,0.969,0.961,0.957,0.935,0.949,0.966,1.0,0.965,0.967,0.962,0.94],\r\n[0.848,0.839,0.881,0.874,0.871,0.912,0.859,0.898,0.905,0.865,0.9,0.89,0.899,0.882,0.906,0.905,0.884,0.904,0.884,0.908,0.869,0.814,0.759,0.556,0.405,0.342,0.29,0.288,0.266,0.276,0.278,0.26,0.195,0.196,0.166,0.108,0.211,0.469,0.708,0.838,0.837,0.884,0.864,0.864,0.913,0.927,0.895,0.909,0.909,0.89,0.873,0.876,0.869,0.792,0.661,0.555,0.353,0.189,0.157,0.256,0.317,0.331,0.318,0.319,0.258,0.215,0.247,0.149,0.154,0.152,0.103,0.152,0.205,0.16,0.065,0.056,0.113,0.143,0.195,0.286,0.434,0.557,0.795,0.904,0.934,0.964,0.956,0.987,0.961,0.938,0.951,0.966,0.961,0.972,0.954,0.95,0.974,0.954,0.973,0.967,0.938],\r\n[0.844,0.87,0.853,0.87,0.845,0.876,0.857,0.892,0.878,0.902,0.9,0.871,0.9,0.917,0.882,0.897,0.895,0.861,0.876,0.894,0.833,0.661,0.485,0.419,0.369,0.359,0.316,0.288,0.242,0.257,0.212,0.241,0.19,0.179,0.185,0.195,0.256,0.462,0.678,0.736,0.834,0.821,0.894,0.866,0.895,0.886,0.905,0.919,0.904,0.889,0.901,0.843,0.846,0.768,0.658,0.504,0.273,0.178,0.175,0.214,0.367,0.305,0.293,0.315,0.254,0.209,0.248,0.173,0.269,0.267,0.318,0.277,0.308,0.287,0.143,0.083,0.059,0.09,0.202,0.186,0.294,0.405,0.597,0.761,0.923,0.919,0.948,0.965,0.948,0.955,0.951,0.953,0.965,0.969,0.947,0.955,0.927,0.954,0.954,0.95,0.934],\r\n[0.836,0.819,0.863,0.884,0.866,0.883,0.866,0.886,0.891,0.912,0.882,0.901,0.861,0.876,0.897,0.877,0.917,0.888,0.833,0.818,0.699,0.542,0.346,0.304,0.321,0.29,0.33,0.306,0.227,0.309,0.245,0.221,0.198,0.253,0.188,0.198,0.199,0.421,0.595,0.712,0.798,0.841,0.848,0.885,0.87,0.906,0.911,0.91,0.881,0.899,0.861,0.857,0.808,0.731,0.569,0.404,0.219,0.203,0.212,0.268,0.303,0.279,0.337,0.254,0.237,0.24,0.26,0.278,0.32,0.262,0.356,0.369,0.357,0.376,0.283,0.199,0.172,0.128,0.08,0.134,0.243,0.186,0.367,0.615,0.805,0.917,0.938,0.966,0.953,0.936,0.947,0.957,0.961,0.972,0.959,0.93,0.952,0.974,0.969,0.957,0.932],\r\n[0.864,0.855,0.862,0.863,0.886,0.856,0.893,0.882,0.889,0.886,0.864,0.855,0.902,0.887,0.887,0.9,0.892,0.893,0.804,0.726,0.528,0.326,0.327,0.261,0.296,0.304,0.294,0.32,0.26,0.247,0.216,0.2,0.235,0.229,0.193,0.181,0.217,0.308,0.508,0.671,0.743,0.77,0.792,0.841,0.851,0.897,0.883,0.882,0.921,0.876,0.823,0.82,0.768,0.712,0.465,0.297,0.211,0.208,0.241,0.297,0.297,0.326,0.247,0.223,0.292,0.27,0.31,0.266,0.25,0.176,0.332,0.311,0.39,0.377,0.322,0.299,0.208,0.133,0.081,0.104,0.137,0.128,0.241,0.365,0.601,0.857,0.927,0.941,0.949,0.985,0.971,0.966,0.961,0.961,0.975,0.922,0.955,0.948,0.958,0.957,0.966],\r\n[0.824,0.87,0.842,0.897,0.868,0.887,0.9,0.898,0.87,0.859,0.887,0.869,0.875,0.877,0.907,0.866,0.87,0.883,0.793,0.565,0.388,0.285,0.275,0.281,0.3,0.333,0.308,0.291,0.254,0.259,0.252,0.235,0.226,0.259,0.255,0.157,0.143,0.222,0.326,0.525,0.619,0.726,0.779,0.769,0.831,0.815,0.862,0.879,0.87,0.875,0.813,0.746,0.714,0.486,0.319,0.264,0.199,0.262,0.233,0.317,0.265,0.283,0.218,0.202,0.219,0.28,0.263,0.193,0.259,0.224,0.319,0.364,0.367,0.426,0.39,0.304,0.259,0.203,0.08,0.009,0.077,0.071,0.121,0.253,0.392,0.661,0.866,0.902,0.954,0.938,0.95,0.948,0.963,0.969,0.986,0.979,0.937,0.969,0.943,0.942,0.928],\r\n[0.839,0.867,0.853,0.851,0.843,0.892,0.875,0.891,0.882,0.88,0.839,0.896,0.887,0.884,0.871,0.881,0.881,0.822,0.671,0.335,0.316,0.235,0.272,0.267,0.294,0.298,0.315,0.252,0.227,0.198,0.214,0.209,0.256,0.278,0.245,0.232,0.209,0.194,0.247,0.378,0.456,0.551,0.73,0.744,0.777,0.772,0.779,0.836,0.796,0.785,0.68,0.651,0.533,0.359,0.245,0.237,0.307,0.275,0.346,0.298,0.229,0.256,0.235,0.216,0.223,0.166,0.208,0.19,0.064,0.138,0.269,0.353,0.396,0.396,0.457,0.357,0.286,0.245,0.17,0.043,0.048,0.022,0.121,0.139,0.334,0.556,0.769,0.918,0.94,0.974,0.945,0.962,0.955,0.961,0.975,0.933,0.943,0.955,0.935,0.906,0.954],\r\n[0.843,0.863,0.877,0.871,0.874,0.891,0.857,0.873,0.866,0.878,0.86,0.893,0.868,0.873,0.864,0.879,0.837,0.781,0.435,0.298,0.25,0.277,0.36,0.295,0.271,0.275,0.255,0.24,0.235,0.204,0.236,0.231,0.181,0.247,0.257,0.27,0.242,0.241,0.203,0.236,0.307,0.381,0.431,0.548,0.604,0.635,0.665,0.666,0.607,0.606,0.522,0.443,0.386,0.21,0.162,0.18,0.268,0.3,0.381,0.327,0.234,0.193,0.214,0.187,0.205,0.147,0.166,0.079,0.141,0.189,0.202,0.358,0.306,0.393,0.457,0.401,0.334,0.32,0.263,0.055,0.02,0.004,0.068,0.1,0.205,0.397,0.568,0.862,0.943,0.95,0.944,0.976,0.974,0.954,0.938,0.96,0.958,0.945,0.954,0.935,0.953],\r\n[0.825,0.841,0.866,0.876,0.883,0.89,0.901,0.877,0.894,0.87,0.877,0.885,0.89,0.872,0.879,0.865,0.828,0.657,0.395,0.21,0.273,0.318,0.345,0.325,0.234,0.27,0.256,0.278,0.245,0.232,0.135,0.173,0.152,0.192,0.227,0.237,0.198,0.221,0.195,0.227,0.18,0.25,0.245,0.23,0.378,0.357,0.435,0.432,0.473,0.341,0.333,0.277,0.208,0.122,0.096,0.11,0.235,0.274,0.346,0.27,0.188,0.203,0.209,0.214,0.188,0.143,0.083,0.032,0.152,0.121,0.156,0.18,0.234,0.373,0.475,0.425,0.342,0.318,0.272,0.072,0.083,0.0,0.039,0.098,0.146,0.295,0.482,0.762,0.895,0.947,0.948,0.929,0.943,0.967,0.939,0.955,0.948,0.958,0.973,0.963,0.942],\r\n[0.83,0.845,0.872,0.842,0.878,0.869,0.864,0.867,0.853,0.855,0.89,0.876,0.888,0.896,0.909,0.849,0.766,0.501,0.261,0.272,0.32,0.275,0.334,0.315,0.304,0.273,0.266,0.243,0.205,0.228,0.156,0.187,0.17,0.247,0.241,0.288,0.252,0.251,0.216,0.199,0.132,0.156,0.1,0.153,0.206,0.225,0.239,0.246,0.21,0.196,0.191,0.188,0.149,0.083,0.085,0.145,0.237,0.226,0.258,0.263,0.218,0.185,0.188,0.226,0.16,0.133,0.169,0.156,0.096,0.1,0.218,0.278,0.265,0.322,0.359,0.373,0.325,0.287,0.379,0.193,0.122,0.096,0.019,0.038,0.114,0.19,0.368,0.59,0.884,0.919,0.95,0.924,0.942,0.96,0.989,0.944,0.951,0.94,0.948,0.931,0.98],\r\n[0.796,0.856,0.865,0.889,0.895,0.891,0.845,0.915,0.873,0.91,0.895,0.88,0.887,0.869,0.821,0.862,0.656,0.404,0.271,0.211,0.295,0.279,0.376,0.282,0.286,0.215,0.245,0.249,0.239,0.25,0.121,0.207,0.187,0.181,0.189,0.298,0.293,0.249,0.24,0.211,0.185,0.161,0.13,0.087,0.152,0.121,0.132,0.171,0.208,0.119,0.138,0.184,0.15,0.134,0.135,0.17,0.201,0.205,0.213,0.251,0.212,0.181,0.199,0.2,0.179,0.156,0.114,0.114,0.156,0.275,0.445,0.524,0.44,0.324,0.357,0.364,0.352,0.3,0.287,0.25,0.093,0.072,0.034,0.065,0.099,0.132,0.244,0.508,0.764,0.9,0.926,0.967,0.958,0.978,0.962,0.967,0.933,0.971,0.946,0.934,0.958],\r\n[0.821,0.881,0.851,0.871,0.891,0.861,0.854,0.923,0.877,0.884,0.884,0.881,0.89,0.875,0.885,0.761,0.439,0.337,0.246,0.284,0.268,0.272,0.362,0.285,0.244,0.276,0.231,0.261,0.232,0.18,0.113,0.199,0.211,0.199,0.239,0.183,0.254,0.259,0.242,0.223,0.183,0.143,0.102,0.059,0.117,0.15,0.116,0.146,0.172,0.144,0.12,0.227,0.194,0.194,0.167,0.22,0.2,0.175,0.218,0.194,0.198,0.173,0.236,0.171,0.186,0.201,0.088,0.162,0.163,0.408,0.681,0.653,0.524,0.364,0.355,0.311,0.332,0.331,0.287,0.28,0.111,0.107,0.07,0.048,0.07,0.159,0.174,0.375,0.644,0.838,0.922,0.937,0.964,0.971,0.943,0.956,0.976,0.952,0.962,0.939,0.938],\r\n[0.856,0.831,0.851,0.891,0.857,0.887,0.89,0.896,0.91,0.9,0.861,0.895,0.887,0.876,0.858,0.666,0.394,0.261,0.227,0.28,0.32,0.302,0.292,0.253,0.258,0.25,0.232,0.308,0.23,0.223,0.146,0.181,0.228,0.24,0.23,0.224,0.204,0.214,0.257,0.216,0.158,0.147,0.138,0.095,0.097,0.083,0.097,0.129,0.163,0.153,0.15,0.169,0.214,0.25,0.165,0.219,0.162,0.157,0.17,0.22,0.201,0.233,0.21,0.223,0.203,0.219,0.145,0.155,0.249,0.419,0.71,0.713,0.617,0.462,0.375,0.426,0.284,0.351,0.274,0.269,0.212,0.125,0.095,0.06,0.07,0.132,0.13,0.234,0.542,0.793,0.921,0.941,0.963,0.955,0.942,0.935,0.933,0.975,0.97,0.931,0.946],\r\n[0.828,0.825,0.842,0.867,0.842,0.892,0.888,0.889,0.868,0.887,0.881,0.862,0.886,0.836,0.763,0.463,0.238,0.242,0.221,0.283,0.306,0.272,0.306,0.238,0.267,0.154,0.238,0.228,0.23,0.196,0.186,0.209,0.201,0.216,0.217,0.23,0.235,0.218,0.231,0.181,0.114,0.166,0.111,0.025,0.093,0.106,0.097,0.119,0.141,0.176,0.177,0.223,0.217,0.238,0.177,0.182,0.143,0.218,0.183,0.213,0.215,0.161,0.177,0.21,0.214,0.267,0.14,0.17,0.241,0.337,0.614,0.761,0.725,0.576,0.423,0.404,0.332,0.292,0.323,0.282,0.249,0.118,0.145,0.142,0.081,0.103,0.127,0.2,0.452,0.622,0.865,0.907,0.944,0.934,0.954,0.969,0.945,0.96,0.934,0.942,0.981],\r\n[0.844,0.862,0.892,0.872,0.873,0.874,0.873,0.911,0.895,0.899,0.893,0.881,0.875,0.832,0.63,0.401,0.197,0.217,0.246,0.325,0.302,0.244,0.209,0.187,0.243,0.253,0.224,0.281,0.205,0.212,0.129,0.222,0.207,0.226,0.254,0.201,0.228,0.216,0.217,0.19,0.132,0.137,0.082,0.079,0.07,0.111,0.156,0.13,0.145,0.163,0.186,0.242,0.218,0.241,0.22,0.189,0.162,0.232,0.189,0.207,0.225,0.138,0.206,0.209,0.222,0.286,0.184,0.13,0.17,0.227,0.532,0.687,0.739,0.656,0.382,0.362,0.352,0.192,0.295,0.321,0.268,0.153,0.115,0.186,0.107,0.144,0.115,0.117,0.286,0.575,0.756,0.891,0.952,0.972,0.944,0.955,0.913,0.967,0.939,0.943,0.928],\r\n[0.85,0.848,0.834,0.848,0.848,0.883,0.901,0.879,0.884,0.865,0.892,0.886,0.875,0.781,0.521,0.339,0.211,0.224,0.227,0.318,0.317,0.295,0.241,0.205,0.199,0.216,0.242,0.267,0.224,0.198,0.077,0.197,0.228,0.178,0.2,0.222,0.225,0.254,0.174,0.217,0.132,0.125,0.155,0.087,0.134,0.075,0.113,0.142,0.184,0.179,0.184,0.255,0.202,0.2,0.164,0.185,0.222,0.219,0.23,0.232,0.21,0.21,0.232,0.296,0.283,0.26,0.183,0.135,0.127,0.169,0.42,0.639,0.759,0.696,0.529,0.405,0.407,0.335,0.276,0.331,0.308,0.217,0.155,0.157,0.146,0.135,0.077,0.123,0.18,0.402,0.606,0.859,0.939,0.95,0.955,0.944,0.951,0.951,0.977,0.965,0.943],\r\n[0.82,0.867,0.9,0.848,0.879,0.886,0.905,0.907,0.859,0.903,0.912,0.892,0.847,0.711,0.425,0.217,0.135,0.213,0.299,0.298,0.309,0.222,0.249,0.188,0.229,0.231,0.242,0.21,0.256,0.191,0.108,0.247,0.232,0.242,0.224,0.247,0.21,0.203,0.236,0.192,0.135,0.138,0.134,0.08,0.09,0.077,0.156,0.134,0.249,0.173,0.196,0.276,0.193,0.24,0.232,0.286,0.296,0.331,0.176,0.153,0.225,0.252,0.28,0.321,0.433,0.336,0.243,0.203,0.139,0.225,0.371,0.586,0.749,0.776,0.598,0.468,0.447,0.381,0.28,0.287,0.308,0.256,0.216,0.134,0.141,0.142,0.075,0.141,0.156,0.298,0.536,0.798,0.918,0.937,0.928,0.947,0.95,0.938,0.961,0.95,0.958],\r\n[0.85,0.86,0.879,0.863,0.882,0.874,0.858,0.865,0.867,0.907,0.838,0.854,0.813,0.682,0.347,0.178,0.245,0.256,0.314,0.293,0.251,0.224,0.211,0.197,0.202,0.208,0.228,0.246,0.266,0.237,0.16,0.17,0.284,0.296,0.212,0.275,0.291,0.249,0.178,0.184,0.161,0.139,0.126,0.099,0.106,0.097,0.153,0.213,0.261,0.251,0.257,0.241,0.327,0.282,0.298,0.315,0.363,0.288,0.315,0.291,0.289,0.347,0.404,0.413,0.387,0.446,0.375,0.354,0.266,0.236,0.371,0.484,0.681,0.771,0.7,0.566,0.49,0.445,0.434,0.312,0.302,0.329,0.272,0.178,0.167,0.152,0.128,0.08,0.137,0.263,0.49,0.783,0.915,0.939,0.943,0.95,0.973,0.943,0.951,0.955,0.946],\r\n[0.869,0.851,0.857,0.865,0.877,0.872,0.889,0.889,0.909,0.897,0.891,0.878,0.798,0.549,0.318,0.201,0.26,0.243,0.263,0.335,0.26,0.189,0.231,0.22,0.19,0.225,0.208,0.244,0.244,0.261,0.224,0.275,0.313,0.312,0.26,0.264,0.275,0.25,0.208,0.199,0.167,0.163,0.12,0.103,0.158,0.155,0.222,0.286,0.331,0.302,0.323,0.322,0.334,0.325,0.341,0.358,0.319,0.343,0.36,0.314,0.375,0.364,0.384,0.417,0.479,0.462,0.448,0.372,0.23,0.294,0.318,0.344,0.61,0.759,0.794,0.69,0.505,0.447,0.45,0.411,0.328,0.349,0.294,0.232,0.193,0.144,0.161,0.054,0.176,0.223,0.434,0.721,0.91,0.949,0.96,0.932,0.937,0.963,0.957,0.932,0.941],\r\n[0.842,0.883,0.858,0.89,0.867,0.888,0.887,0.844,0.87,0.879,0.859,0.831,0.777,0.559,0.316,0.222,0.254,0.275,0.259,0.263,0.235,0.231,0.251,0.209,0.255,0.216,0.228,0.222,0.246,0.263,0.245,0.315,0.377,0.384,0.322,0.287,0.273,0.269,0.237,0.231,0.164,0.159,0.125,0.19,0.227,0.282,0.315,0.325,0.341,0.291,0.272,0.326,0.361,0.361,0.383,0.386,0.389,0.328,0.37,0.381,0.4,0.38,0.408,0.44,0.49,0.477,0.472,0.496,0.414,0.337,0.344,0.351,0.554,0.671,0.784,0.76,0.681,0.537,0.459,0.475,0.238,0.33,0.367,0.27,0.203,0.174,0.117,0.052,0.127,0.202,0.419,0.66,0.893,0.917,0.949,0.942,0.948,0.945,0.947,0.961,0.939],\r\n[0.845,0.867,0.876,0.879,0.855,0.883,0.864,0.853,0.868,0.884,0.873,0.856,0.804,0.505,0.253,0.212,0.221,0.271,0.296,0.273,0.194,0.217,0.213,0.231,0.23,0.22,0.243,0.275,0.269,0.341,0.278,0.362,0.366,0.367,0.36,0.345,0.367,0.295,0.263,0.209,0.189,0.252,0.208,0.264,0.288,0.265,0.375,0.358,0.396,0.359,0.311,0.399,0.393,0.395,0.378,0.344,0.375,0.368,0.392,0.417,0.377,0.325,0.35,0.376,0.438,0.498,0.496,0.493,0.435,0.38,0.396,0.359,0.452,0.587,0.762,0.77,0.715,0.586,0.532,0.469,0.309,0.26,0.336,0.24,0.216,0.187,0.121,0.062,0.094,0.194,0.385,0.618,0.843,0.95,0.952,0.951,0.924,0.968,0.978,0.941,0.946],\r\n[0.818,0.833,0.867,0.898,0.864,0.894,0.881,0.881,0.914,0.888,0.867,0.845,0.713,0.44,0.251,0.255,0.214,0.263,0.29,0.25,0.235,0.209,0.207,0.239,0.277,0.217,0.248,0.296,0.31,0.336,0.388,0.386,0.399,0.378,0.394,0.378,0.314,0.387,0.271,0.316,0.293,0.281,0.334,0.309,0.369,0.289,0.328,0.35,0.45,0.409,0.291,0.36,0.318,0.311,0.236,0.332,0.357,0.33,0.374,0.331,0.354,0.285,0.23,0.311,0.391,0.447,0.485,0.418,0.309,0.306,0.281,0.322,0.371,0.486,0.66,0.761,0.775,0.644,0.538,0.49,0.404,0.3,0.34,0.277,0.228,0.25,0.144,0.048,0.092,0.184,0.277,0.48,0.817,0.936,0.964,0.957,0.941,0.962,0.964,0.946,0.946],\r\n[0.851,0.849,0.868,0.861,0.831,0.859,0.905,0.86,0.892,0.875,0.884,0.857,0.635,0.435,0.201,0.175,0.247,0.29,0.284,0.301,0.217,0.224,0.199,0.204,0.233,0.245,0.28,0.316,0.32,0.342,0.358,0.358,0.461,0.434,0.389,0.401,0.341,0.326,0.387,0.328,0.338,0.324,0.357,0.422,0.402,0.322,0.333,0.363,0.323,0.345,0.284,0.231,0.245,0.159,0.223,0.24,0.374,0.431,0.417,0.294,0.271,0.225,0.224,0.261,0.376,0.35,0.493,0.446,0.322,0.335,0.329,0.319,0.461,0.467,0.508,0.735,0.807,0.738,0.58,0.527,0.398,0.269,0.352,0.305,0.292,0.233,0.185,0.114,0.081,0.152,0.252,0.528,0.804,0.934,0.926,0.936,0.98,0.96,0.951,0.935,0.952],\r\n[0.829,0.83,0.839,0.877,0.81,0.865,0.884,0.889,0.893,0.889,0.866,0.843,0.615,0.354,0.216,0.224,0.307,0.311,0.286,0.251,0.216,0.209,0.191,0.243,0.234,0.295,0.309,0.337,0.339,0.353,0.348,0.346,0.385,0.313,0.372,0.405,0.384,0.351,0.369,0.37,0.346,0.335,0.391,0.408,0.326,0.293,0.328,0.293,0.325,0.305,0.273,0.208,0.175,0.115,0.235,0.279,0.323,0.443,0.455,0.26,0.307,0.323,0.247,0.228,0.38,0.379,0.464,0.405,0.335,0.345,0.381,0.4,0.506,0.524,0.526,0.723,0.795,0.768,0.647,0.538,0.465,0.253,0.314,0.315,0.311,0.254,0.224,0.156,0.058,0.159,0.229,0.418,0.821,0.939,0.957,0.945,0.953,0.943,0.958,0.96,0.934],\r\n[0.847,0.887,0.868,0.887,0.876,0.862,0.86,0.884,0.891,0.891,0.834,0.825,0.62,0.323,0.278,0.243,0.312,0.366,0.304,0.277,0.208,0.177,0.202,0.215,0.259,0.266,0.282,0.307,0.287,0.31,0.318,0.36,0.407,0.357,0.37,0.35,0.391,0.359,0.355,0.283,0.279,0.273,0.371,0.36,0.356,0.324,0.301,0.264,0.344,0.338,0.394,0.339,0.331,0.16,0.254,0.314,0.459,0.584,0.585,0.475,0.296,0.333,0.308,0.316,0.352,0.452,0.543,0.455,0.474,0.428,0.534,0.613,0.671,0.69,0.693,0.774,0.851,0.876,0.712,0.547,0.422,0.342,0.305,0.312,0.322,0.345,0.279,0.205,0.081,0.14,0.231,0.434,0.761,0.886,0.95,0.941,0.93,0.943,0.97,0.944,0.94],\r\n[0.862,0.84,0.869,0.871,0.895,0.889,0.874,0.879,0.898,0.892,0.872,0.771,0.544,0.299,0.191,0.242,0.309,0.326,0.269,0.307,0.197,0.192,0.216,0.26,0.225,0.269,0.318,0.219,0.328,0.271,0.298,0.353,0.361,0.32,0.337,0.359,0.424,0.359,0.351,0.241,0.211,0.243,0.374,0.398,0.44,0.409,0.299,0.42,0.44,0.431,0.506,0.5,0.396,0.281,0.264,0.463,0.607,0.741,0.733,0.72,0.575,0.499,0.538,0.462,0.522,0.592,0.649,0.577,0.558,0.617,0.778,0.815,0.822,0.84,0.814,0.853,0.869,0.895,0.797,0.631,0.423,0.331,0.299,0.285,0.334,0.271,0.314,0.199,0.106,0.141,0.216,0.383,0.711,0.884,0.936,0.959,0.929,0.968,0.961,0.933,0.947],\r\n[0.852,0.861,0.855,0.866,0.867,0.883,0.875,0.885,0.866,0.853,0.827,0.792,0.504,0.252,0.22,0.279,0.31,0.313,0.261,0.287,0.217,0.153,0.197,0.254,0.203,0.27,0.265,0.245,0.236,0.272,0.246,0.358,0.295,0.338,0.301,0.338,0.367,0.313,0.33,0.294,0.294,0.369,0.428,0.546,0.571,0.617,0.585,0.512,0.578,0.606,0.667,0.656,0.609,0.424,0.428,0.551,0.759,0.797,0.881,0.835,0.804,0.79,0.75,0.734,0.749,0.833,0.816,0.809,0.793,0.8,0.863,0.871,0.919,0.915,0.914,0.899,0.934,0.921,0.816,0.712,0.484,0.356,0.305,0.35,0.3,0.235,0.263,0.203,0.123,0.152,0.169,0.337,0.665,0.868,0.932,0.969,0.944,0.934,0.949,0.947,0.932],\r\n[0.825,0.866,0.851,0.855,0.883,0.895,0.868,0.879,0.883,0.868,0.844,0.736,0.502,0.235,0.216,0.272,0.269,0.329,0.263,0.354,0.168,0.13,0.184,0.152,0.202,0.215,0.222,0.2,0.236,0.221,0.24,0.268,0.302,0.278,0.264,0.327,0.334,0.312,0.305,0.271,0.308,0.499,0.63,0.714,0.776,0.804,0.76,0.769,0.794,0.732,0.798,0.768,0.65,0.475,0.452,0.54,0.752,0.856,0.91,0.864,0.843,0.787,0.868,0.847,0.855,0.826,0.831,0.847,0.874,0.873,0.874,0.904,0.936,0.936,0.942,0.941,0.911,0.843,0.805,0.621,0.45,0.312,0.367,0.403,0.321,0.246,0.246,0.215,0.111,0.144,0.209,0.315,0.612,0.848,0.914,0.92,0.944,0.924,0.973,0.955,0.939],\r\n[0.844,0.886,0.842,0.816,0.866,0.841,0.877,0.865,0.889,0.908,0.867,0.714,0.438,0.21,0.177,0.239,0.316,0.322,0.302,0.345,0.226,0.158,0.163,0.192,0.186,0.214,0.214,0.151,0.172,0.235,0.199,0.261,0.235,0.213,0.225,0.267,0.305,0.292,0.373,0.366,0.413,0.625,0.7,0.847,0.839,0.813,0.836,0.849,0.808,0.799,0.766,0.769,0.596,0.414,0.436,0.547,0.697,0.794,0.851,0.821,0.781,0.722,0.761,0.712,0.78,0.73,0.706,0.738,0.789,0.789,0.782,0.762,0.871,0.886,0.901,0.884,0.78,0.669,0.612,0.555,0.33,0.324,0.387,0.411,0.306,0.154,0.23,0.196,0.106,0.164,0.164,0.332,0.61,0.826,0.938,0.941,0.966,0.955,0.949,0.965,0.942],\r\n[0.834,0.863,0.882,0.873,0.846,0.863,0.853,0.897,0.869,0.884,0.837,0.735,0.458,0.216,0.207,0.26,0.318,0.379,0.278,0.369,0.257,0.171,0.214,0.195,0.126,0.15,0.196,0.196,0.136,0.2,0.185,0.224,0.234,0.199,0.237,0.313,0.309,0.347,0.338,0.406,0.517,0.669,0.746,0.78,0.79,0.786,0.746,0.731,0.749,0.675,0.698,0.604,0.5,0.406,0.432,0.526,0.548,0.68,0.712,0.67,0.609,0.566,0.58,0.543,0.53,0.576,0.547,0.543,0.565,0.624,0.623,0.577,0.732,0.788,0.857,0.794,0.706,0.569,0.512,0.453,0.398,0.301,0.374,0.383,0.317,0.185,0.167,0.172,0.105,0.102,0.181,0.282,0.603,0.858,0.885,0.928,0.949,0.93,0.954,0.963,0.937],\r\n[0.851,0.869,0.836,0.858,0.899,0.886,0.878,0.906,0.87,0.872,0.856,0.769,0.51,0.209,0.184,0.198,0.271,0.367,0.316,0.331,0.266,0.176,0.156,0.155,0.202,0.13,0.162,0.194,0.144,0.173,0.181,0.245,0.227,0.257,0.326,0.346,0.332,0.338,0.32,0.386,0.464,0.579,0.671,0.704,0.699,0.571,0.599,0.533,0.602,0.563,0.521,0.486,0.485,0.359,0.321,0.316,0.515,0.543,0.59,0.55,0.383,0.414,0.48,0.437,0.409,0.394,0.411,0.38,0.51,0.497,0.423,0.356,0.532,0.565,0.722,0.69,0.619,0.512,0.378,0.281,0.407,0.328,0.361,0.349,0.404,0.175,0.188,0.156,0.098,0.119,0.203,0.339,0.657,0.873,0.906,0.961,0.971,0.963,0.962,0.979,0.952],\r\n[0.847,0.84,0.864,0.853,0.856,0.882,0.846,0.869,0.873,0.884,0.856,0.792,0.516,0.313,0.22,0.229,0.278,0.308,0.285,0.321,0.292,0.153,0.128,0.192,0.17,0.213,0.192,0.162,0.166,0.205,0.211,0.268,0.335,0.299,0.374,0.38,0.358,0.313,0.191,0.309,0.421,0.498,0.543,0.529,0.438,0.416,0.405,0.405,0.452,0.449,0.382,0.37,0.386,0.336,0.361,0.279,0.413,0.412,0.451,0.458,0.269,0.318,0.374,0.391,0.257,0.137,0.314,0.227,0.409,0.436,0.353,0.253,0.385,0.401,0.572,0.562,0.493,0.451,0.352,0.256,0.344,0.336,0.292,0.313,0.35,0.182,0.197,0.147,0.147,0.114,0.205,0.354,0.683,0.867,0.948,0.935,0.967,0.944,0.948,0.944,0.944],\r\n[0.873,0.856,0.877,0.88,0.871,0.864,0.867,0.878,0.903,0.914,0.846,0.791,0.576,0.29,0.2,0.229,0.318,0.38,0.404,0.314,0.308,0.164,0.173,0.189,0.233,0.165,0.16,0.217,0.169,0.189,0.229,0.331,0.356,0.332,0.375,0.374,0.344,0.289,0.152,0.227,0.358,0.41,0.445,0.393,0.35,0.248,0.308,0.322,0.348,0.359,0.36,0.336,0.286,0.276,0.245,0.198,0.282,0.322,0.329,0.383,0.251,0.273,0.342,0.268,0.174,0.128,0.193,0.274,0.353,0.31,0.22,0.181,0.173,0.248,0.353,0.445,0.448,0.394,0.449,0.24,0.234,0.383,0.281,0.321,0.333,0.191,0.141,0.129,0.114,0.162,0.248,0.399,0.767,0.9,0.929,0.956,0.932,0.958,0.941,0.936,0.96],\r\n[0.809,0.866,0.893,0.856,0.871,0.906,0.88,0.916,0.898,0.89,0.892,0.848,0.691,0.308,0.207,0.257,0.243,0.354,0.318,0.277,0.335,0.204,0.182,0.205,0.247,0.217,0.192,0.161,0.151,0.158,0.165,0.245,0.357,0.366,0.373,0.354,0.328,0.288,0.188,0.196,0.393,0.382,0.441,0.329,0.306,0.18,0.224,0.239,0.241,0.311,0.391,0.331,0.209,0.118,0.247,0.179,0.249,0.297,0.248,0.363,0.267,0.299,0.297,0.264,0.227,0.138,0.173,0.271,0.334,0.272,0.185,0.108,0.197,0.181,0.265,0.375,0.345,0.414,0.433,0.388,0.216,0.342,0.262,0.196,0.224,0.169,0.168,0.099,0.115,0.163,0.246,0.421,0.758,0.894,0.94,0.954,0.897,0.961,0.926,0.983,0.967],\r\n[0.852,0.837,0.865,0.84,0.872,0.89,0.893,0.891,0.883,0.87,0.851,0.857,0.63,0.335,0.261,0.256,0.261,0.309,0.338,0.345,0.336,0.225,0.199,0.203,0.193,0.238,0.258,0.192,0.179,0.122,0.202,0.243,0.36,0.364,0.352,0.347,0.322,0.295,0.28,0.338,0.371,0.41,0.393,0.328,0.252,0.229,0.351,0.249,0.243,0.321,0.365,0.293,0.313,0.273,0.295,0.291,0.329,0.302,0.277,0.375,0.359,0.285,0.334,0.349,0.268,0.292,0.272,0.406,0.426,0.322,0.319,0.163,0.218,0.167,0.266,0.335,0.282,0.38,0.388,0.356,0.209,0.314,0.197,0.152,0.177,0.145,0.154,0.094,0.143,0.148,0.306,0.56,0.792,0.92,0.94,0.965,0.958,0.934,0.956,0.948,0.979],\r\n[0.853,0.817,0.837,0.84,0.887,0.872,0.877,0.883,0.861,0.877,0.87,0.84,0.742,0.401,0.24,0.243,0.261,0.299,0.294,0.377,0.298,0.24,0.24,0.206,0.232,0.226,0.234,0.191,0.152,0.206,0.242,0.285,0.414,0.485,0.467,0.438,0.397,0.445,0.44,0.39,0.461,0.439,0.44,0.363,0.397,0.388,0.41,0.356,0.336,0.383,0.405,0.344,0.401,0.378,0.391,0.376,0.366,0.368,0.363,0.398,0.425,0.339,0.324,0.356,0.273,0.295,0.328,0.391,0.465,0.408,0.384,0.285,0.151,0.197,0.289,0.4,0.305,0.314,0.341,0.351,0.202,0.234,0.222,0.18,0.168,0.195,0.142,0.075,0.109,0.219,0.327,0.556,0.859,0.915,0.955,0.938,0.956,0.945,0.954,0.942,0.974],\r\n[0.857,0.823,0.867,0.894,0.853,0.891,0.872,0.885,0.894,0.865,0.897,0.869,0.78,0.457,0.263,0.288,0.279,0.335,0.303,0.395,0.327,0.316,0.238,0.194,0.197,0.281,0.191,0.204,0.189,0.162,0.3,0.335,0.496,0.645,0.658,0.666,0.582,0.564,0.589,0.594,0.607,0.612,0.551,0.462,0.382,0.453,0.491,0.524,0.46,0.431,0.478,0.487,0.51,0.573,0.644,0.576,0.514,0.506,0.524,0.545,0.567,0.533,0.566,0.531,0.472,0.369,0.419,0.451,0.598,0.523,0.345,0.377,0.221,0.212,0.354,0.321,0.288,0.29,0.339,0.273,0.244,0.231,0.248,0.19,0.213,0.168,0.16,0.164,0.143,0.196,0.349,0.627,0.834,0.92,0.946,0.966,0.953,0.938,0.955,0.973,0.943],\r\n[0.836,0.886,0.871,0.874,0.882,0.902,0.889,0.885,0.867,0.881,0.896,0.87,0.763,0.535,0.231,0.204,0.219,0.245,0.277,0.319,0.32,0.286,0.235,0.235,0.257,0.246,0.18,0.24,0.163,0.265,0.327,0.47,0.71,0.787,0.799,0.764,0.727,0.773,0.792,0.742,0.745,0.799,0.659,0.647,0.58,0.497,0.64,0.64,0.677,0.643,0.606,0.682,0.721,0.77,0.821,0.778,0.767,0.705,0.75,0.753,0.788,0.747,0.732,0.75,0.64,0.606,0.601,0.669,0.664,0.521,0.365,0.297,0.245,0.237,0.372,0.289,0.295,0.278,0.307,0.284,0.289,0.26,0.243,0.144,0.188,0.154,0.131,0.105,0.175,0.281,0.43,0.699,0.875,0.946,0.963,0.954,0.955,0.946,0.949,0.916,0.925],\r\n[0.836,0.85,0.873,0.854,0.864,0.877,0.895,0.891,0.874,0.87,0.908,0.872,0.787,0.575,0.293,0.146,0.159,0.203,0.232,0.314,0.332,0.303,0.266,0.198,0.261,0.268,0.22,0.259,0.202,0.186,0.361,0.569,0.762,0.806,0.818,0.74,0.683,0.838,0.813,0.845,0.853,0.744,0.686,0.625,0.716,0.739,0.766,0.787,0.832,0.798,0.778,0.808,0.84,0.872,0.87,0.836,0.863,0.774,0.81,0.87,0.83,0.869,0.852,0.832,0.794,0.757,0.771,0.788,0.711,0.552,0.3,0.236,0.195,0.222,0.33,0.252,0.157,0.177,0.291,0.331,0.311,0.194,0.19,0.21,0.196,0.152,0.12,0.105,0.151,0.252,0.452,0.786,0.873,0.916,0.955,0.966,0.934,0.977,0.939,0.949,0.955],\r\n[0.847,0.865,0.864,0.857,0.854,0.891,0.858,0.883,0.881,0.868,0.861,0.867,0.834,0.623,0.346,0.205,0.177,0.206,0.172,0.343,0.305,0.313,0.345,0.229,0.333,0.337,0.303,0.229,0.185,0.276,0.314,0.577,0.805,0.804,0.743,0.571,0.527,0.696,0.822,0.821,0.815,0.733,0.677,0.673,0.744,0.829,0.863,0.879,0.892,0.854,0.791,0.755,0.841,0.801,0.87,0.769,0.789,0.788,0.858,0.859,0.893,0.867,0.868,0.819,0.79,0.85,0.843,0.826,0.705,0.518,0.398,0.218,0.222,0.203,0.307,0.201,0.186,0.18,0.222,0.227,0.322,0.229,0.233,0.204,0.176,0.117,0.055,0.132,0.194,0.259,0.47,0.706,0.893,0.954,0.955,0.959,0.957,0.925,0.958,0.96,0.929],\r\n[0.85,0.857,0.854,0.87,0.88,0.88,0.866,0.869,0.869,0.91,0.855,0.864,0.862,0.652,0.389,0.201,0.161,0.204,0.179,0.311,0.346,0.375,0.345,0.305,0.335,0.361,0.286,0.222,0.181,0.312,0.379,0.597,0.755,0.776,0.764,0.533,0.438,0.615,0.734,0.756,0.81,0.719,0.678,0.624,0.677,0.79,0.867,0.875,0.875,0.836,0.685,0.632,0.751,0.74,0.713,0.65,0.616,0.548,0.675,0.755,0.734,0.743,0.721,0.511,0.73,0.768,0.834,0.781,0.665,0.49,0.365,0.248,0.265,0.241,0.245,0.232,0.204,0.202,0.194,0.215,0.283,0.292,0.211,0.2,0.194,0.123,0.124,0.123,0.245,0.339,0.519,0.836,0.938,0.927,0.964,0.967,0.96,0.953,0.95,0.948,0.957],\r\n[0.854,0.838,0.878,0.86,0.897,0.867,0.876,0.882,0.889,0.886,0.869,0.898,0.852,0.75,0.46,0.22,0.163,0.181,0.174,0.276,0.295,0.328,0.347,0.34,0.353,0.386,0.275,0.243,0.195,0.249,0.328,0.59,0.77,0.773,0.726,0.486,0.346,0.38,0.548,0.575,0.622,0.614,0.618,0.59,0.592,0.704,0.842,0.872,0.895,0.806,0.63,0.481,0.645,0.599,0.644,0.537,0.511,0.456,0.545,0.498,0.454,0.532,0.501,0.325,0.485,0.604,0.701,0.677,0.6,0.317,0.342,0.221,0.226,0.187,0.224,0.152,0.256,0.199,0.188,0.198,0.218,0.275,0.23,0.201,0.163,0.106,0.11,0.125,0.224,0.396,0.607,0.832,0.921,0.954,0.947,0.957,0.971,0.97,0.961,0.958,0.936],\r\n[0.844,0.848,0.881,0.891,0.865,0.893,0.898,0.883,0.898,0.901,0.853,0.891,0.866,0.838,0.597,0.298,0.123,0.13,0.112,0.254,0.326,0.412,0.394,0.357,0.335,0.31,0.293,0.22,0.241,0.286,0.342,0.548,0.763,0.735,0.581,0.449,0.383,0.396,0.411,0.454,0.431,0.403,0.429,0.449,0.482,0.677,0.852,0.849,0.84,0.654,0.462,0.423,0.435,0.452,0.451,0.487,0.449,0.415,0.386,0.442,0.317,0.384,0.235,0.207,0.192,0.35,0.548,0.553,0.483,0.258,0.323,0.309,0.194,0.143,0.19,0.137,0.235,0.13,0.154,0.162,0.222,0.223,0.206,0.232,0.174,0.154,0.133,0.201,0.316,0.441,0.719,0.887,0.957,0.965,0.965,0.973,0.975,0.955,0.956,0.969,0.95],\r\n[0.799,0.854,0.866,0.838,0.884,0.875,0.89,0.894,0.892,0.879,0.871,0.877,0.895,0.879,0.655,0.412,0.205,0.155,0.12,0.179,0.301,0.402,0.441,0.353,0.338,0.406,0.256,0.238,0.209,0.264,0.343,0.601,0.697,0.673,0.565,0.341,0.318,0.384,0.349,0.373,0.355,0.247,0.339,0.272,0.511,0.705,0.796,0.815,0.72,0.527,0.452,0.382,0.343,0.305,0.396,0.397,0.441,0.458,0.345,0.402,0.265,0.296,0.296,0.273,0.222,0.313,0.49,0.47,0.415,0.272,0.307,0.268,0.203,0.177,0.208,0.142,0.081,0.139,0.167,0.139,0.181,0.225,0.196,0.185,0.187,0.125,0.258,0.293,0.373,0.588,0.831,0.928,0.953,0.938,0.953,0.955,0.952,0.965,0.941,0.948,0.927],\r\n[0.84,0.86,0.855,0.872,0.878,0.871,0.884,0.877,0.885,0.89,0.862,0.879,0.903,0.85,0.78,0.532,0.287,0.169,0.189,0.196,0.314,0.38,0.393,0.39,0.392,0.356,0.248,0.248,0.197,0.24,0.327,0.577,0.695,0.647,0.485,0.396,0.276,0.304,0.368,0.303,0.314,0.158,0.219,0.308,0.51,0.68,0.837,0.762,0.599,0.384,0.308,0.303,0.328,0.286,0.394,0.427,0.476,0.42,0.431,0.497,0.39,0.449,0.362,0.247,0.168,0.242,0.49,0.502,0.435,0.259,0.223,0.213,0.201,0.142,0.238,0.139,0.096,0.108,0.178,0.175,0.209,0.214,0.2,0.154,0.115,0.122,0.304,0.358,0.501,0.723,0.898,0.937,0.949,0.964,0.941,0.961,0.961,0.937,0.937,0.96,0.949],\r\n[0.819,0.842,0.887,0.843,0.875,0.889,0.855,0.885,0.876,0.912,0.891,0.881,0.88,0.856,0.832,0.718,0.423,0.184,0.16,0.207,0.21,0.343,0.413,0.404,0.338,0.324,0.268,0.198,0.214,0.259,0.33,0.477,0.632,0.57,0.396,0.287,0.31,0.333,0.336,0.292,0.273,0.166,0.181,0.295,0.385,0.584,0.755,0.676,0.527,0.309,0.246,0.297,0.346,0.26,0.443,0.506,0.572,0.605,0.587,0.677,0.624,0.607,0.538,0.473,0.507,0.416,0.506,0.445,0.438,0.243,0.133,0.144,0.234,0.146,0.205,0.159,0.12,0.122,0.14,0.153,0.219,0.221,0.16,0.154,0.13,0.171,0.311,0.435,0.649,0.8,0.942,0.961,0.949,0.971,0.975,0.968,0.98,0.943,0.959,0.944,0.951],\r\n[0.873,0.841,0.815,0.857,0.854,0.872,0.864,0.852,0.887,0.867,0.876,0.878,0.901,0.855,0.894,0.812,0.552,0.289,0.15,0.194,0.285,0.292,0.404,0.394,0.428,0.333,0.282,0.235,0.165,0.211,0.305,0.33,0.403,0.368,0.256,0.159,0.262,0.294,0.36,0.349,0.296,0.151,0.157,0.202,0.295,0.501,0.55,0.488,0.385,0.238,0.236,0.327,0.483,0.481,0.601,0.641,0.736,0.742,0.752,0.801,0.826,0.83,0.8,0.748,0.762,0.682,0.646,0.532,0.456,0.308,0.18,0.139,0.152,0.138,0.181,0.154,0.144,0.201,0.156,0.167,0.201,0.222,0.166,0.126,0.139,0.253,0.4,0.519,0.739,0.868,0.95,0.951,0.969,0.954,0.953,0.963,0.922,0.96,0.971,0.943,0.953],\r\n[0.85,0.832,0.876,0.875,0.881,0.868,0.889,0.868,0.907,0.874,0.87,0.913,0.88,0.892,0.898,0.859,0.727,0.433,0.185,0.193,0.195,0.282,0.345,0.413,0.428,0.386,0.313,0.309,0.221,0.178,0.255,0.224,0.164,0.211,0.137,0.116,0.206,0.314,0.339,0.373,0.355,0.201,0.14,0.159,0.228,0.333,0.267,0.249,0.269,0.185,0.246,0.343,0.554,0.579,0.708,0.799,0.789,0.866,0.831,0.88,0.905,0.89,0.858,0.883,0.857,0.827,0.787,0.659,0.54,0.321,0.258,0.226,0.092,0.12,0.125,0.092,0.104,0.16,0.11,0.168,0.196,0.192,0.153,0.197,0.224,0.257,0.442,0.658,0.839,0.902,0.959,0.947,0.968,0.951,0.942,0.962,0.938,0.961,0.948,0.956,0.927],\r\n[0.864,0.812,0.912,0.856,0.886,0.876,0.883,0.88,0.892,0.876,0.884,0.889,0.87,0.883,0.905,0.912,0.83,0.573,0.335,0.197,0.212,0.19,0.248,0.376,0.42,0.46,0.314,0.343,0.277,0.262,0.249,0.197,0.13,0.14,0.099,0.073,0.14,0.271,0.313,0.311,0.298,0.223,0.147,0.13,0.238,0.233,0.184,0.178,0.189,0.271,0.326,0.473,0.642,0.745,0.813,0.824,0.859,0.868,0.878,0.862,0.881,0.889,0.887,0.892,0.878,0.899,0.857,0.836,0.699,0.447,0.227,0.22,0.168,0.08,0.096,0.13,0.132,0.164,0.135,0.127,0.167,0.158,0.1,0.111,0.233,0.345,0.486,0.767,0.903,0.916,0.958,0.952,0.953,0.973,0.954,0.962,0.954,0.963,0.949,0.948,0.921],\r\n[0.846,0.863,0.889,0.885,0.886,0.865,0.88,0.878,0.889,0.867,0.864,0.889,0.873,0.908,0.891,0.853,0.84,0.737,0.387,0.229,0.113,0.115,0.172,0.235,0.423,0.453,0.379,0.381,0.316,0.333,0.186,0.203,0.177,0.124,0.043,0.146,0.241,0.244,0.321,0.258,0.273,0.228,0.191,0.179,0.187,0.166,0.165,0.199,0.246,0.321,0.445,0.611,0.703,0.823,0.854,0.832,0.887,0.869,0.857,0.821,0.819,0.844,0.855,0.88,0.873,0.874,0.886,0.875,0.789,0.666,0.399,0.301,0.155,0.172,0.063,0.089,0.094,0.144,0.206,0.146,0.177,0.153,0.153,0.175,0.321,0.427,0.625,0.825,0.945,0.94,0.948,0.945,0.967,0.934,0.957,0.95,0.957,0.944,0.944,0.937,0.932],\r\n[0.831,0.836,0.883,0.873,0.877,0.868,0.875,0.874,0.884,0.92,0.885,0.905,0.88,0.907,0.874,0.883,0.841,0.799,0.478,0.329,0.181,0.096,0.136,0.197,0.348,0.438,0.382,0.379,0.326,0.292,0.272,0.255,0.192,0.187,0.165,0.219,0.296,0.274,0.246,0.23,0.255,0.217,0.207,0.213,0.208,0.143,0.12,0.241,0.318,0.389,0.597,0.724,0.788,0.865,0.872,0.831,0.829,0.719,0.715,0.711,0.649,0.626,0.714,0.787,0.865,0.842,0.873,0.884,0.864,0.768,0.557,0.35,0.2,0.19,0.078,0.122,0.131,0.144,0.178,0.164,0.22,0.186,0.19,0.276,0.376,0.537,0.742,0.899,0.925,0.916,0.92,0.953,0.954,0.951,0.958,0.939,0.951,0.943,0.945,0.947,0.966],\r\n[0.837,0.868,0.858,0.869,0.888,0.89,0.888,0.897,0.883,0.885,0.871,0.876,0.888,0.914,0.876,0.904,0.875,0.839,0.724,0.457,0.296,0.163,0.095,0.14,0.308,0.393,0.405,0.391,0.34,0.29,0.29,0.283,0.239,0.225,0.295,0.263,0.295,0.219,0.274,0.234,0.266,0.231,0.231,0.239,0.182,0.127,0.054,0.216,0.333,0.513,0.651,0.777,0.859,0.868,0.84,0.774,0.681,0.553,0.554,0.536,0.584,0.535,0.526,0.545,0.716,0.789,0.87,0.883,0.896,0.836,0.679,0.42,0.261,0.166,0.106,0.099,0.12,0.108,0.221,0.241,0.207,0.246,0.322,0.343,0.419,0.625,0.859,0.95,0.941,0.946,0.947,0.958,0.964,0.929,0.987,0.942,0.955,0.957,0.935,0.962,0.948],\r\n[0.869,0.882,0.871,0.845,0.893,0.894,0.891,0.861,0.883,0.866,0.849,0.89,0.891,0.887,0.852,0.883,0.92,0.847,0.811,0.589,0.402,0.244,0.167,0.149,0.206,0.308,0.363,0.359,0.375,0.329,0.285,0.309,0.301,0.326,0.279,0.299,0.356,0.259,0.317,0.302,0.217,0.293,0.215,0.222,0.224,0.125,0.126,0.208,0.395,0.543,0.766,0.847,0.848,0.85,0.784,0.512,0.417,0.268,0.375,0.411,0.436,0.449,0.392,0.355,0.466,0.624,0.796,0.897,0.89,0.859,0.813,0.517,0.296,0.19,0.17,0.132,0.137,0.143,0.224,0.223,0.304,0.324,0.334,0.421,0.575,0.788,0.853,0.922,0.974,0.965,0.952,0.943,0.952,0.945,0.958,0.945,0.965,0.96,0.922,0.952,0.93],\r\n[0.837,0.84,0.88,0.875,0.864,0.893,0.861,0.899,0.883,0.933,0.9,0.891,0.916,0.892,0.908,0.904,0.92,0.874,0.855,0.782,0.554,0.341,0.249,0.116,0.138,0.242,0.271,0.406,0.337,0.359,0.327,0.323,0.285,0.301,0.287,0.28,0.305,0.261,0.284,0.214,0.212,0.209,0.218,0.18,0.194,0.141,0.175,0.328,0.413,0.61,0.76,0.791,0.869,0.848,0.596,0.42,0.253,0.169,0.245,0.323,0.38,0.362,0.359,0.383,0.421,0.581,0.759,0.866,0.864,0.881,0.831,0.639,0.44,0.254,0.145,0.081,0.186,0.213,0.229,0.274,0.324,0.343,0.377,0.559,0.756,0.875,0.926,0.965,0.959,0.964,0.959,0.963,0.96,0.961,0.966,0.942,0.976,0.953,0.955,0.954,0.955],\r\n[0.866,0.843,0.85,0.876,0.877,0.869,0.906,0.869,0.888,0.877,0.873,0.893,0.913,0.899,0.89,0.91,0.907,0.888,0.852,0.867,0.767,0.554,0.395,0.207,0.133,0.199,0.212,0.27,0.301,0.347,0.37,0.353,0.356,0.32,0.297,0.318,0.343,0.298,0.252,0.287,0.242,0.146,0.262,0.247,0.208,0.154,0.201,0.27,0.426,0.602,0.834,0.855,0.822,0.819,0.484,0.255,0.202,0.115,0.259,0.249,0.322,0.371,0.341,0.352,0.404,0.54,0.641,0.846,0.91,0.898,0.857,0.734,0.412,0.248,0.15,0.046,0.11,0.187,0.22,0.334,0.372,0.45,0.554,0.725,0.858,0.915,0.956,0.944,0.925,0.961,0.951,0.949,0.96,0.974,0.974,0.954,0.943,0.955,0.951,0.953,0.94],\r\n[0.861,0.843,0.853,0.861,0.89,0.895,0.887,0.899,0.893,0.895,0.891,0.897,0.888,0.852,0.9,0.879,0.905,0.888,0.87,0.893,0.857,0.809,0.589,0.401,0.207,0.17,0.163,0.224,0.27,0.333,0.377,0.395,0.371,0.315,0.363,0.36,0.345,0.252,0.333,0.26,0.234,0.233,0.231,0.201,0.277,0.16,0.195,0.237,0.344,0.576,0.76,0.859,0.843,0.787,0.474,0.166,0.17,0.126,0.207,0.309,0.272,0.313,0.27,0.388,0.368,0.507,0.638,0.771,0.856,0.918,0.864,0.749,0.441,0.28,0.093,0.124,0.14,0.19,0.262,0.365,0.533,0.596,0.734,0.856,0.922,0.926,0.967,0.975,0.936,0.958,0.937,0.957,0.955,0.943,0.955,0.935,0.972,0.965,0.955,0.971,0.939],\r\n[0.873,0.853,0.863,0.886,0.859,0.844,0.87,0.885,0.899,0.882,0.879,0.871,0.889,0.916,0.897,0.877,0.874,0.892,0.885,0.889,0.864,0.858,0.761,0.541,0.361,0.296,0.141,0.16,0.215,0.246,0.351,0.366,0.382,0.394,0.352,0.313,0.321,0.36,0.347,0.261,0.293,0.245,0.2,0.221,0.267,0.203,0.194,0.187,0.333,0.644,0.788,0.813,0.835,0.738,0.553,0.192,0.224,0.115,0.203,0.329,0.288,0.288,0.261,0.308,0.394,0.467,0.65,0.78,0.891,0.898,0.864,0.729,0.5,0.29,0.207,0.169,0.24,0.283,0.389,0.48,0.6,0.748,0.872,0.923,0.94,0.935,0.951,0.978,0.978,0.975,0.952,0.964,0.958,0.949,0.946,0.924,0.953,0.914,0.962,0.968,0.972],\r\n[0.844,0.847,0.88,0.862,0.891,0.88,0.875,0.866,0.891,0.894,0.859,0.894,0.903,0.907,0.876,0.92,0.894,0.894,0.874,0.889,0.895,0.88,0.855,0.797,0.582,0.382,0.22,0.119,0.154,0.202,0.29,0.337,0.365,0.404,0.338,0.35,0.397,0.324,0.343,0.257,0.29,0.267,0.221,0.201,0.277,0.31,0.363,0.385,0.471,0.689,0.802,0.822,0.855,0.775,0.634,0.332,0.176,0.097,0.185,0.245,0.199,0.211,0.2,0.234,0.433,0.549,0.593,0.76,0.892,0.942,0.877,0.766,0.424,0.347,0.212,0.177,0.236,0.295,0.437,0.549,0.75,0.861,0.909,0.946,0.954,0.945,0.951,0.939,0.948,0.958,0.978,0.961,0.965,0.94,0.966,0.96,0.951,0.957,0.948,0.955,0.952],\r\n[0.819,0.851,0.899,0.878,0.855,0.891,0.887,0.83,0.902,0.92,0.865,0.891,0.882,0.883,0.873,0.894,0.896,0.9,0.899,0.882,0.892,0.94,0.868,0.81,0.797,0.55,0.339,0.263,0.084,0.109,0.206,0.24,0.359,0.336,0.341,0.343,0.386,0.38,0.32,0.33,0.299,0.313,0.307,0.309,0.377,0.342,0.424,0.382,0.539,0.671,0.84,0.844,0.849,0.801,0.667,0.428,0.271,0.165,0.14,0.225,0.192,0.102,0.163,0.228,0.402,0.498,0.689,0.806,0.888,0.906,0.862,0.715,0.445,0.333,0.327,0.272,0.375,0.379,0.619,0.737,0.868,0.901,0.948,0.973,0.939,0.979,0.955,0.946,0.95,0.939,0.951,0.96,0.956,0.965,0.97,0.953,0.954,0.946,0.951,0.967,0.985],\r\n[0.868,0.863,0.879,0.86,0.898,0.895,0.882,0.867,0.859,0.908,0.897,0.868,0.904,0.894,0.862,0.884,0.894,0.874,0.888,0.892,0.944,0.89,0.885,0.876,0.892,0.833,0.482,0.371,0.224,0.137,0.133,0.222,0.249,0.26,0.326,0.359,0.336,0.359,0.343,0.345,0.349,0.369,0.327,0.354,0.331,0.337,0.368,0.414,0.492,0.709,0.806,0.857,0.829,0.832,0.71,0.5,0.321,0.283,0.121,0.137,0.109,0.083,0.206,0.251,0.343,0.559,0.724,0.874,0.893,0.899,0.861,0.575,0.434,0.354,0.276,0.367,0.395,0.566,0.749,0.883,0.903,0.94,0.952,0.956,0.948,0.957,0.96,0.954,0.939,0.97,0.944,0.953,0.962,0.962,0.946,0.95,0.943,0.908,0.944,0.97,0.94],\r\n[0.892,0.839,0.88,0.856,0.855,0.892,0.873,0.885,0.853,0.876,0.888,0.921,0.905,0.892,0.882,0.913,0.885,0.877,0.882,0.876,0.934,0.899,0.895,0.895,0.895,0.884,0.791,0.524,0.389,0.236,0.164,0.23,0.216,0.281,0.275,0.309,0.41,0.368,0.417,0.343,0.319,0.335,0.37,0.345,0.283,0.308,0.327,0.286,0.461,0.585,0.729,0.852,0.889,0.866,0.778,0.708,0.513,0.335,0.229,0.216,0.221,0.17,0.26,0.323,0.462,0.665,0.795,0.854,0.907,0.891,0.78,0.57,0.433,0.306,0.34,0.44,0.592,0.76,0.876,0.898,0.937,0.917,0.958,0.932,0.978,0.971,0.952,0.96,0.964,0.974,0.956,0.952,0.94,0.958,0.961,0.968,0.965,0.961,0.958,0.937,0.96],\r\n[0.851,0.831,0.88,0.866,0.899,0.864,0.891,0.869,0.906,0.898,0.889,0.85,0.903,0.9,0.916,0.876,0.877,0.884,0.9,0.905,0.889,0.928,0.902,0.922,0.889,0.887,0.858,0.809,0.583,0.435,0.314,0.278,0.227,0.236,0.264,0.256,0.307,0.304,0.288,0.351,0.367,0.337,0.378,0.291,0.278,0.257,0.21,0.184,0.362,0.414,0.78,0.786,0.87,0.854,0.849,0.796,0.698,0.582,0.446,0.322,0.251,0.28,0.304,0.467,0.643,0.736,0.879,0.888,0.9,0.9,0.753,0.51,0.383,0.42,0.467,0.544,0.772,0.854,0.909,0.932,0.942,0.923,0.94,0.965,0.971,0.954,0.954,0.931,0.962,0.945,0.933,0.936,0.971,0.953,0.959,0.959,0.967,0.977,0.949,0.959,0.969],\r\n[0.862,0.886,0.877,0.861,0.86,0.868,0.872,0.854,0.907,0.899,0.895,0.906,0.878,0.912,0.884,0.898,0.887,0.885,0.907,0.893,0.903,0.907,0.904,0.904,0.9,0.921,0.882,0.879,0.777,0.689,0.507,0.436,0.331,0.255,0.23,0.236,0.319,0.239,0.245,0.293,0.293,0.328,0.35,0.331,0.303,0.186,0.205,0.198,0.247,0.398,0.622,0.801,0.808,0.906,0.866,0.863,0.798,0.732,0.658,0.624,0.477,0.508,0.566,0.704,0.783,0.855,0.885,0.909,0.876,0.896,0.719,0.622,0.522,0.605,0.668,0.756,0.902,0.916,0.965,0.975,0.98,0.952,0.97,0.951,0.959,0.947,0.954,0.966,0.971,0.965,0.954,0.966,0.942,0.942,0.936,0.958,0.957,0.952,0.962,0.949,0.957],\r\n[0.87,0.861,0.851,0.885,0.866,0.824,0.865,0.881,0.915,0.876,0.921,0.869,0.901,0.907,0.911,0.902,0.915,0.86,0.885,0.882,0.875,0.912,0.914,0.893,0.908,0.929,0.913,0.868,0.865,0.859,0.81,0.717,0.548,0.425,0.287,0.267,0.244,0.234,0.246,0.291,0.255,0.365,0.324,0.277,0.271,0.209,0.146,0.137,0.204,0.293,0.492,0.658,0.798,0.867,0.862,0.887,0.867,0.851,0.811,0.8,0.732,0.757,0.818,0.839,0.875,0.888,0.888,0.905,0.873,0.871,0.79,0.674,0.67,0.783,0.842,0.895,0.907,0.923,0.963,0.943,0.966,0.984,0.974,0.955,0.963,0.947,0.965,0.933,0.937,0.948,0.936,0.959,0.944,0.983,0.96,0.965,0.959,0.944,0.944,0.948,0.924],\r\n[0.866,0.831,0.831,0.879,0.886,0.848,0.871,0.894,0.838,0.863,0.9,0.892,0.918,0.887,0.876,0.876,0.903,0.877,0.895,0.876,0.897,0.895,0.907,0.92,0.892,0.93,0.897,0.906,0.895,0.895,0.866,0.824,0.812,0.721,0.529,0.47,0.341,0.283,0.213,0.189,0.218,0.33,0.272,0.271,0.262,0.189,0.139,0.12,0.283,0.317,0.393,0.468,0.665,0.819,0.802,0.852,0.88,0.878,0.847,0.875,0.879,0.843,0.847,0.885,0.908,0.873,0.917,0.915,0.898,0.878,0.865,0.896,0.894,0.901,0.947,0.935,0.959,0.94,0.958,0.962,0.941,0.959,0.971,0.958,0.957,0.937,0.952,0.941,0.941,0.947,0.964,0.956,0.935,0.955,0.978,0.959,0.97,0.956,0.947,0.977,0.949],\r\n[0.854,0.822,0.838,0.87,0.871,0.871,0.853,0.895,0.871,0.913,0.901,0.907,0.907,0.894,0.908,0.88,0.899,0.861,0.911,0.858,0.891,0.895,0.902,0.918,0.894,0.906,0.877,0.901,0.909,0.879,0.931,0.909,0.897,0.861,0.822,0.727,0.575,0.429,0.414,0.275,0.215,0.245,0.272,0.275,0.287,0.272,0.232,0.154,0.254,0.304,0.333,0.419,0.556,0.674,0.757,0.83,0.867,0.876,0.885,0.914,0.874,0.88,0.892,0.919,0.907,0.905,0.874,0.921,0.93,0.938,0.899,0.943,0.928,0.942,0.94,0.937,0.949,0.947,0.979,0.988,0.916,0.936,0.95,0.966,0.932,0.956,0.939,0.948,0.978,0.951,0.958,0.949,0.95,0.952,0.953,0.94,0.944,0.961,0.957,0.933,0.944],\r\n[0.875,0.852,0.859,0.858,0.888,0.862,0.883,0.863,0.903,0.881,0.878,0.879,0.897,0.901,0.89,0.911,0.897,0.912,0.902,0.92,0.871,0.886,0.912,0.919,0.886,0.901,0.917,0.912,0.915,0.911,0.927,0.904,0.91,0.925,0.887,0.88,0.804,0.729,0.594,0.491,0.378,0.341,0.304,0.306,0.354,0.278,0.307,0.31,0.389,0.33,0.343,0.409,0.478,0.512,0.609,0.761,0.835,0.88,0.881,0.918,0.897,0.894,0.896,0.903,0.921,0.921,0.911,0.897,0.932,0.939,0.937,0.963,0.941,0.941,0.936,0.95,0.947,0.972,0.968,0.947,0.955,0.972,0.981,0.949,0.957,0.945,0.967,0.974,0.969,0.96,0.961,0.934,0.971,0.931,0.973,0.939,0.962,0.956,0.949,0.944,0.925],\r\n[0.866,0.863,0.87,0.87,0.864,0.865,0.869,0.895,0.904,0.88,0.892,0.865,0.901,0.876,0.889,0.872,0.874,0.878,0.876,0.844,0.914,0.898,0.899,0.902,0.925,0.909,0.904,0.9,0.936,0.913,0.922,0.907,0.934,0.907,0.877,0.898,0.897,0.848,0.79,0.754,0.614,0.623,0.504,0.498,0.436,0.377,0.44,0.337,0.384,0.344,0.281,0.398,0.406,0.428,0.519,0.65,0.815,0.856,0.867,0.902,0.923,0.909,0.934,0.914,0.905,0.905,0.895,0.928,0.93,0.947,0.983,0.927,0.956,0.943,0.934,0.961,0.944,0.932,0.946,0.958,0.954,0.952,0.942,0.963,0.96,0.948,0.949,0.943,0.981,0.948,0.962,0.955,0.972,0.95,0.971,0.963,0.96,0.961,0.946,0.981,0.957],\r\n[0.852,0.805,0.826,0.885,0.854,0.856,0.876,0.862,0.888,0.899,0.901,0.88,0.888,0.89,0.899,0.899,0.904,0.865,0.91,0.919,0.887,0.898,0.902,0.92,0.93,0.929,0.917,0.913,0.896,0.891,0.873,0.924,0.925,0.898,0.922,0.912,0.929,0.881,0.88,0.894,0.86,0.819,0.813,0.785,0.748,0.679,0.664,0.612,0.555,0.498,0.428,0.45,0.447,0.469,0.554,0.661,0.837,0.873,0.919,0.915,0.943,0.942,0.946,0.928,0.912,0.919,0.913,0.95,0.926,0.946,0.97,0.941,0.979,0.943,0.946,0.956,0.946,0.952,0.961,0.967,0.939,0.942,0.952,0.941,0.938,0.948,0.945,0.971,0.965,0.955,0.949,0.97,0.947,0.956,0.964,0.933,0.923,0.924,0.955,0.956,0.967],\r\n[0.868,0.866,0.874,0.9,0.899,0.897,0.846,0.885,0.906,0.87,0.893,0.9,0.922,0.893,0.895,0.9,0.906,0.88,0.924,0.896,0.915,0.901,0.913,0.883,0.924,0.9,0.928,0.906,0.912,0.891,0.935,0.892,0.899,0.912,0.914,0.889,0.925,0.92,0.916,0.92,0.915,0.882,0.881,0.863,0.894,0.877,0.82,0.821,0.802,0.773,0.748,0.72,0.673,0.752,0.797,0.827,0.894,0.896,0.913,0.934,0.932,0.919,0.906,0.907,0.921,0.933,0.957,0.929,0.952,0.94,0.949,0.936,0.967,0.951,0.947,0.957,0.925,0.95,0.958,0.965,0.942,0.963,0.948,0.961,0.933,0.95,0.974,0.958,0.94,0.955,0.953,0.955,0.97,0.964,0.962,0.953,0.952,0.959,0.949,0.965,0.966],\r\n[0.853,0.882,0.845,0.87,0.899,0.891,0.894,0.897,0.877,0.909,0.905,0.863,0.902,0.894,0.882,0.899,0.903,0.872,0.878,0.888,0.905,0.903,0.906,0.881,0.885,0.911,0.909,0.915,0.9,0.884,0.922,0.888,0.949,0.9,0.933,0.94,0.93,0.922,0.915,0.899,0.935,0.934,0.902,0.897,0.904,0.903,0.931,0.895,0.901,0.89,0.847,0.871,0.879,0.871,0.882,0.899,0.923,0.941,0.927,0.93,0.943,0.959,0.951,0.937,0.934,0.936,0.943,0.962,0.955,0.934,0.961,0.946,0.969,0.954,0.954,0.964,0.942,0.947,0.96,0.95,0.968,0.958,0.966,0.958,0.997,0.96,0.935,0.945,0.953,0.93,0.948,0.959,0.989,0.963,0.949,0.943,0.955,0.942,0.965,0.964,0.972],\r\n[0.85,0.853,0.845,0.845,0.88,0.858,0.896,0.884,0.884,0.875,0.88,0.907,0.879,0.919,0.878,0.888,0.88,0.883,0.902,0.908,0.909,0.902,0.884,0.895,0.927,0.893,0.902,0.903,0.889,0.925,0.936,0.934,0.918,0.92,0.911,0.886,0.916,0.896,0.919,0.921,0.914,0.884,0.919,0.912,0.902,0.942,0.929,0.92,0.935,0.883,0.902,0.88,0.888,0.901,0.911,0.887,0.925,0.931,0.943,0.948,0.94,0.949,0.93,0.96,0.933,0.933,0.929,0.926,0.959,0.935,0.968,0.938,0.956,0.956,0.941,0.988,0.952,0.95,0.956,0.949,0.943,0.95,0.958,0.911,0.972,0.95,0.955,0.95,0.949,0.955,0.946,0.954,0.948,0.961,0.933,0.956,0.944,0.932,0.959,0.935,0.958],\r\n[0.867,0.866,0.87,0.861,0.862,0.89,0.888,0.887,0.899,0.907,0.864,0.885,0.867,0.851,0.891,0.908,0.864,0.9,0.917,0.907,0.894,0.887,0.917,0.886,0.923,0.91,0.908,0.89,0.915,0.897,0.908,0.93,0.927,0.908,0.882,0.914,0.909,0.929,0.922,0.912,0.914,0.901,0.928,0.934,0.908,0.901,0.914,0.93,0.912,0.893,0.905,0.9,0.902,0.916,0.933,0.907,0.93,0.939,0.955,0.941,0.937,0.924,0.941,0.951,0.946,0.945,0.972,0.911,0.927,0.952,0.952,0.964,0.967,0.959,0.949,0.967,0.952,0.951,0.978,0.977,0.929,0.952,0.942,0.959,0.933,0.945,0.947,0.963,0.945,0.946,0.945,0.939,0.929,0.953,0.967,0.942,0.943,0.951,0.924,0.971,0.956],\r\n[0.89,0.842,0.858,0.846,0.854,0.874,0.874,0.85,0.885,0.882,0.887,0.899,0.913,0.857,0.862,0.877,0.891,0.9,0.902,0.908,0.937,0.893,0.907,0.934,0.9,0.906,0.915,0.919,0.921,0.914,0.912,0.904,0.944,0.903,0.879,0.89,0.929,0.914,0.898,0.915,0.92,0.894,0.919,0.899,0.908,0.914,0.897,0.943,0.918,0.915,0.911,0.885,0.905,0.919,0.92,0.917,0.916,0.906,0.919,0.936,0.962,0.93,0.948,0.948,0.938,0.948,0.944,0.941,0.963,0.932,0.965,0.942,0.968,0.955,0.97,0.972,0.955,0.947,0.946,0.931,0.953,0.936,0.966,0.974,0.966,0.94,0.947,0.949,0.964,0.941,0.966,0.956,0.956,0.959,0.922,0.957,0.961,0.958,0.936,0.949,0.947],\r\n[0.862,0.832,0.865,0.838,0.875,0.867,0.887,0.878,0.89,0.877,0.894,0.874,0.899,0.89,0.866,0.891,0.863,0.876,0.927,0.872,0.907,0.868,0.956,0.92,0.918,0.906,0.881,0.916,0.898,0.927,0.929,0.898,0.921,0.923,0.942,0.927,0.897,0.881,0.893,0.904,0.922,0.902,0.909,0.936,0.923,0.921,0.904,0.883,0.909,0.92,0.899,0.88,0.902,0.909,0.93,0.904,0.885,0.93,0.95,0.891,0.928,0.932,0.913,0.94,0.939,0.926,0.953,0.926,0.945,0.909,0.934,0.955,0.966,0.968,0.966,0.951,0.95,0.952,0.941,0.921,0.94,0.956,0.954,0.954,0.953,0.971,0.949,0.945,0.949,0.966,0.963,0.961,0.937,0.963,0.941,0.963,0.945,0.952,0.932,0.95,0.939],\r\n[0.854,0.846,0.847,0.848,0.877,0.852,0.886,0.869,0.861,0.892,0.88,0.897,0.886,0.902,0.874,0.877,0.887,0.91,0.913,0.893,0.899,0.902,0.923,0.921,0.931,0.894,0.92,0.906,0.92,0.907,0.903,0.914,0.927,0.928,0.901,0.923,0.926,0.923,0.9,0.92,0.902,0.922,0.904,0.933,0.938,0.905,0.937,0.934,0.923,0.924,0.919,0.915,0.897,0.898,0.92,0.911,0.948,0.929,0.927,0.931,0.943,0.923,0.932,0.942,0.934,0.938,0.923,0.91,0.949,0.954,0.953,0.944,0.978,0.954,0.958,0.965,0.955,0.935,0.934,0.941,0.968,0.944,0.957,0.944,0.958,0.955,0.956,0.966,0.97,0.961,0.983,0.959,0.966,0.94,0.947,0.968,0.961,0.959,0.92,0.931,0.949],\r\n[0.846,0.863,0.902,0.884,0.877,0.883,0.84,0.878,0.87,0.898,0.858,0.887,0.898,0.854,0.908,0.896,0.892,0.894,0.9,0.903,0.917,0.94,0.887,0.915,0.924,0.926,0.921,0.906,0.925,0.927,0.915,0.908,0.927,0.914,0.942,0.929,0.914,0.95,0.939,0.929,0.937,0.942,0.931,0.938,0.908,0.909,0.916,0.939,0.94,0.946,0.915,0.935,0.922,0.922,0.924,0.924,0.939,0.938,0.926,0.956,0.945,0.942,0.926,0.935,0.919,0.919,0.961,0.946,0.917,0.956,0.953,0.95,0.973,0.934,0.958,0.976,0.937,0.967,0.958,0.97,0.962,0.95,0.967,0.958,0.967,0.93,0.957,0.959,0.99,0.948,0.951,0.951,0.954,0.952,0.977,0.952,0.934,0.95,0.966,0.98,0.957],\r\n[0.888,0.84,0.836,0.885,0.865,0.867,0.864,0.892,0.888,0.879,0.875,0.877,0.893,0.886,0.878,0.919,0.882,0.911,0.892,0.906,0.882,0.912,0.918,0.896,0.929,0.947,0.919,0.894,0.912,0.908,0.942,0.898,0.915,0.919,0.904,0.916,0.925,0.927,0.933,0.894,0.927,0.935,0.909,0.926,0.918,0.889,0.916,0.905,0.965,0.911,0.894,0.899,0.916,0.921,0.921,0.891,0.932,0.93,0.945,0.916,0.945,0.939,0.944,0.905,0.932,0.936,0.943,0.94,0.977,0.966,0.961,0.957,0.949,0.932,0.971,0.959,0.945,0.943,0.926,0.98,0.936,0.965,0.934,0.957,0.974,0.933,0.977,0.967,0.927,0.963,0.97,0.976,0.947,0.94,0.98,0.942,0.973,0.951,0.945,0.975,0.933],\r\n[0.86,0.847,0.852,0.867,0.858,0.891,0.882,0.887,0.891,0.887,0.862,0.877,0.897,0.89,0.911,0.929,0.891,0.899,0.888,0.906,0.904,0.901,0.887,0.882,0.937,0.943,0.913,0.898,0.907,0.926,0.927,0.916,0.89,0.899,0.909,0.944,0.892,0.926,0.891,0.901,0.931,0.909,0.907,0.922,0.932,0.909,0.931,0.926,0.911,0.937,0.905,0.918,0.898,0.932,0.935,0.916,0.921,0.927,0.934,0.94,0.96,0.938,0.936,0.937,0.948,0.949,0.92,0.935,0.939,0.947,0.95,0.95,0.951,0.945,0.949,0.967,0.951,0.914,0.955,0.956,0.97,0.962,0.952,0.953,0.959,0.967,0.929,0.981,0.957,0.94,0.935,0.939,0.977,0.961,0.962,0.962,0.949,0.949,0.957,0.954,0.934],\r\n[0.856,0.849,0.847,0.88,0.882,0.876,0.921,0.849,0.866,0.874,0.873,0.885,0.902,0.875,0.883,0.88,0.893,0.884,0.876,0.885,0.894,0.911,0.913,0.918,0.901,0.923,0.923,0.881,0.907,0.885,0.913,0.915,0.893,0.911,0.936,0.929,0.924,0.913,0.911,0.925,0.936,0.917,0.917,0.908,0.911,0.937,0.949,0.943,0.907,0.932,0.919,0.912,0.926,0.904,0.932,0.924,0.913,0.89,0.927,0.954,0.953,0.931,0.923,0.915,0.93,0.923,0.942,0.95,0.941,0.931,0.94,0.935,0.954,0.959,0.985,0.942,0.952,0.957,0.969,0.976,0.972,0.929,0.944,0.952,0.976,0.948,0.957,0.955,0.952,0.952,0.942,0.964,0.947,0.945,0.986,0.955,0.96,0.956,0.942,0.95,0.924],\r\n[0.862,0.854,0.86,0.86,0.895,0.886,0.891,0.895,0.883,0.887,0.892,0.872,0.904,0.898,0.908,0.913,0.911,0.915,0.9,0.912,0.914,0.916,0.891,0.918,0.934,0.917,0.91,0.88,0.899,0.882,0.941,0.929,0.924,0.918,0.911,0.9,0.918,0.893,0.938,0.911,0.899,0.91,0.912,0.91,0.9,0.914,0.906,0.934,0.902,0.904,0.917,0.932,0.899,0.905,0.909,0.928,0.948,0.933,0.916,0.913,0.922,0.915,0.906,0.931,0.95,0.936,0.939,0.95,0.944,0.956,0.962,0.937,0.957,0.945,0.954,0.976,0.953,0.945,0.938,0.94,0.945,0.936,0.95,0.938,0.95,0.941,0.965,0.974,0.972,0.943,0.969,0.935,0.982,0.945,0.962,0.944,0.959,0.958,0.972,0.949,0.946]]","import * as THREE from './node_modules/three/build/three.module.js';\r\nimport { OrbitControls } from './node_modules/three/examples/jsm/controls/OrbitControls.js';\r\n\r\nimport { d1 } from './dane.js';\r\n\r\n\r\nlet scene, camera, renderer, controls;\r\nlet layerSpacing = 2;\r\n\r\nfunction getMaxVal(data) {\r\n    let max = -Infinity;\r\n    for (let i = 0; i < data.length; i++) {\r\n        for (let j = 0; j < data[i].length; j++) {\r\n            if (data[i][j] > max) {\r\n                max = data[i][j];\r\n            }\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nfunction clearScene() {\r\n    for (let i = scene.children.length - 1; i >= 0; i--) {\r\n        const object = scene.children[i];\r\n        if (object instanceof THREE.Mesh) {\r\n            object.geometry.dispose();\r\n            object.material.dispose();\r\n            scene.remove(object);\r\n        }\r\n    }\r\n}\r\n\r\ndocument.getElementById('minusSpacing').addEventListener('click', function() {\r\n    clearScene();\r\n    layerSpacing +=10;\r\n    addDataToScene(d1);\r\n});\r\n\r\ndocument.getElementById('plusSpacing').addEventListener('click', function() {\r\n    clearScene();\r\n    layerSpacing -=10;\r\n    addDataToScene(d1);\r\n});\r\n\r\n\r\n\r\nfunction addDataToScene(data) {\r\n    const maxValue = getMaxVal(data);\r\n    const thresh = maxValue / 10;\r\n    \r\n\r\n    const bigBois = 0.3;\r\n    const spacing = 1.5;\r\n\r\n    // for (let y = 0; y < data.length; y++) {\r\n    //     for (let x = 0; x < data[y].length; x++) {\r\n\r\n    //         const layer = Math.floor(data[y][x] / thresh);\r\n\r\n    //         if (data[y][x] < (layer + 1) * thresh) {\r\n    //             const sphereGeometry = new THREE.SphereGeometry(bigBois, 8, 8);\r\n    //             const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    //             const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n\r\n    //             sphere.position.set(x * spacing, y * spacing, layer * layerSpacing);\r\n    //             scene.add(sphere);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n            const sphereGeometry = new THREE.SphereGeometry(bigBois, 8, 8);\r\n        const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const instances = data.length * data[0].length * 10; // załóżmy, że maksymalnie będziesz miał tyle instancji\r\n        const instancedSphere = new THREE.InstancedMesh(sphereGeometry, sphereMaterial, instances);\r\n\r\n        let instanceCounter = 0;\r\n        for (let y = 0; y < data.length; y++) {\r\n            for (let x = 0; x < data[y].length; x++) {\r\n                const layer = Math.floor(data[y][x] / thresh);\r\n                for (let currentLayer = 0; currentLayer <= layer; currentLayer++) {\r\n                    const matrix = new THREE.Matrix4();\r\n                    matrix.setPosition(x * spacing, y * spacing, currentLayer * layerSpacing);\r\n                    instancedSphere.setMatrixAt(instanceCounter++, matrix);\r\n                }\r\n            }\r\n        }\r\n\r\n        scene.add(instancedSphere);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction init() {\r\n    scene = new THREE.Scene();\r\n    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    camera.position.set(50, -200, -300);  //hate it \r\n    camera.lookAt(scene.position);\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    controls = new OrbitControls(camera, renderer.domElement); \r\n\r\n    addDataToScene(d1, 2);\r\n    animate();\r\n}\r\n\r\n\r\nfunction animate() {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n}\r\n\r\ninit();\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}